{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hacking_skill\":311,\"hp\":10,\"max_hp\":10,\"strength\":2,\"defense\":2,\"dexterity\":2,\"agility\":2,\"charisma\":209,\"intelligence\":0,\"hacking_chance_mult\":1,\"hacking_speed_mult\":1,\"hacking_money_mult\":1,\"hacking_grow_mult\":1,\"hacking_exp\":8777788.489816215,\"strength_exp\":23.572499999999586,\"defense_exp\":23.572499999999586,\"dexterity_exp\":23.572499999999586,\"agility_exp\":23.572499999999586,\"charisma_exp\":362401.7499997566,\"intelligence_exp\":0,\"hacking_mult\":1,\"strength_mult\":1,\"defense_mult\":1,\"dexterity_mult\":1,\"agility_mult\":1,\"charisma_mult\":1,\"hacking_exp_mult\":1,\"strength_exp_mult\":1,\"defense_exp_mult\":1,\"dexterity_exp_mult\":1,\"agility_exp_mult\":1,\"charisma_exp_mult\":1,\"company_rep_mult\":1,\"faction_rep_mult\":1,\"money\":\"762065037.3817630566\",\"total_money\":\"48115114392.312982532\",\"lifetime_money\":\"48115114392.312982532\",\"homeComputer\":\"44.1.3.8\",\"city\":\"Sector-12\",\"location\":\"Alpha Enterprises\",\"companyName\":\"Alpha Enterprises\",\"companyPosition\":\"Business Manager\",\"currentServer\":\"44.1.3.8\",\"purchasedServers\":[\"3.1.6.8\",\"44.4.7.3\",\"73.2.2.9\",\"48.6.7.4\",\"18.4.4.1\",\"69.8.5.5\",\"7.5.5.4\",\"5.2.5.4\",\"79.4.5.9\",\"32.7.8.8\",\"21.7.2.8\",\"53.0.3.8\",\"94.4.9.4\",\"67.8.8.9\",\"44.2.7.2\",\"34.1.1.2\",\"22.2.9.3\",\"67.6.1.1\",\"21.8.0.4\",\"24.6.1.4\"],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-0\",\"totalMoneyGenerated\":1159313924.3713305,\"onlineTimeSeconds\":219117.80000437726,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-1\",\"totalMoneyGenerated\":1006930908.6089845,\"onlineTimeSeconds\":214570.6000040438,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-2\",\"totalMoneyGenerated\":1105934553.6931121,\"onlineTimeSeconds\":214507.80000403902,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-3\",\"totalMoneyGenerated\":998162028.6762596,\"onlineTimeSeconds\":214507.20000403898,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-4\",\"totalMoneyGenerated\":1163819591.9675078,\"onlineTimeSeconds\":214504.80000403879,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-5\",\"totalMoneyGenerated\":1146803667.8581114,\"onlineTimeSeconds\":214504.20000403875,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-6\",\"totalMoneyGenerated\":1146740989.0946631,\"onlineTimeSeconds\":214501.40000403853,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-7\",\"totalMoneyGenerated\":974153009.4251287,\"onlineTimeSeconds\":214500.80000403846,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-8\",\"totalMoneyGenerated\":1126735259.8485894,\"onlineTimeSeconds\":206391.00000341883,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-9\",\"totalMoneyGenerated\":1124617919.2403538,\"onlineTimeSeconds\":206383.60000341825,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-10\",\"totalMoneyGenerated\":1123087397.387022,\"onlineTimeSeconds\":139806.99999917325,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-11\",\"totalMoneyGenerated\":1083814828.5516455,\"onlineTimeSeconds\":131981.59999871798,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-12\",\"totalMoneyGenerated\":1046077907.972836,\"onlineTimeSeconds\":126278.59999873526,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-13\",\"totalMoneyGenerated\":1034916733.0732011,\"onlineTimeSeconds\":124151.59999876583,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-14\",\"totalMoneyGenerated\":877026068.4270189,\"onlineTimeSeconds\":93339.99999921136,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-15\",\"totalMoneyGenerated\":876034154.5522798,\"onlineTimeSeconds\":93189.99999921354,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-16\",\"totalMoneyGenerated\":874854316.306426,\"onlineTimeSeconds\":93055.99999921549,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-17\",\"totalMoneyGenerated\":873349064.0625799,\"onlineTimeSeconds\":92927.79999921736,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-18\",\"totalMoneyGenerated\":855918040.4435892,\"onlineTimeSeconds\":89176.99999927156,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-19\",\"totalMoneyGenerated\":547349603.450751,\"onlineTimeSeconds\":55950.599999746984,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-20\",\"totalMoneyGenerated\":547232229.8928322,\"onlineTimeSeconds\":55950.599999746984,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-21\",\"totalMoneyGenerated\":547112880.908948,\"onlineTimeSeconds\":55938.59999974716,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-22\",\"totalMoneyGenerated\":545635910.7851372,\"onlineTimeSeconds\":55926.39999974734,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-23\",\"totalMoneyGenerated\":544235011.3939736,\"onlineTimeSeconds\":55775.39999974953,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-24\",\"totalMoneyGenerated\":544000035.158136,\"onlineTimeSeconds\":55632.19999975162,\"moneyGainRatePerSecond\":9782.729826851042}},{\"ctor\":\"HacknetNode\",\"data\":{\"level\":200,\"ram\":64,\"cores\":16,\"name\":\"hacknet-node-25\",\"totalMoneyGenerated\":385568240.5679583,\"onlineTimeSeconds\":39559.59999998541,\"moneyGainRatePerSecond\":9782.729826851042}}],\"totalHacknetNodeProduction\":254350.97549812723,\"factions\":[\"CyberSec\",\"Netburners\",\"NiteSec\",\"Sector-12\"],\"factionInvitations\":[],\"queuedAugmentations\":[{\"name\":\"Neurotrainer I\",\"level\":1},{\"name\":\"BitWire\",\"level\":1},{\"name\":\"Synaptic Enhancement Implant\",\"level\":1},{\"name\":\"Hacknet Node Cache Architecture Neural-Upload\",\"level\":1},{\"name\":\"Hacknet Node NIC Architecture Neural-Upload\",\"level\":1},{\"name\":\"Hacknet Node CPU Architecture Neural-Upload\",\"level\":1},{\"name\":\"Cranial Signal Processors - Gen I\",\"level\":1},{\"name\":\"Hacknet Node Kernel Direct-Neural Interface\",\"level\":1},{\"name\":\"NeuroFlux Governor\",\"level\":1},{\"name\":\"Wired Reflexes\",\"level\":1},{\"name\":\"NeuroFlux Governor\",\"level\":2}],\"augmentations\":[],\"sourceFiles\":[],\"numPeopleKilled\":0,\"karma\":0,\"crime_money_mult\":1,\"crime_success_mult\":1,\"isWorking\":false,\"workType\":\"Working for Company\",\"currentWorkFactionName\":\"\",\"currentWorkFactionDescription\":\"\",\"workHackExpGainRate\":0,\"workStrExpGainRate\":0,\"workDefExpGainRate\":0,\"workDexExpGainRate\":0,\"workAgiExpGainRate\":0,\"workChaExpGainRate\":0,\"workRepGainRate\":0,\"workMoneyGainRate\":0,\"workMoneyLossRate\":0,\"workHackExpGained\":0,\"workStrExpGained\":0,\"workDefExpGained\":0,\"workDexExpGained\":0,\"workAgiExpGained\":0,\"workChaExpGained\":0,\"workRepGained\":0,\"workMoneyGained\":0,\"createProgramName\":\"\",\"createProgramReqLvl\":75,\"className\":\"\",\"crimeType\":\"\",\"timeWorked\":0,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":28800000,\"work_money_mult\":1,\"hacknet_node_money_mult\":1,\"hacknet_node_purchase_cost_mult\":1,\"hacknet_node_ram_cost_mult\":1,\"hacknet_node_core_cost_mult\":1,\"hacknet_node_level_cost_mult\":1,\"hasWseAccount\":false,\"hasTixApiAccess\":false,\"has4SData\":false,\"has4SDataTixApi\":false,\"gang\":0,\"corporation\":0,\"bladeburner\":0,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"bitNodeN\":1,\"firstFacInvRecvd\":true,\"firstAugPurchased\":true,\"firstTimeTraveled\":false,\"firstProgramAvailable\":true,\"lastUpdate\":1549090482112,\"totalPlaytime\":220764400,\"playtimeSinceLastAug\":220764400,\"playtimeSinceLastBitnode\":220764400,\"scriptProdSinceLastAug\":24808222016,\"stockProdSinceLastAug\":0,\"crimeProdSinceLastAug\":0,\"jobProdSinceLastAug\":0,\"factionWorkType\":\"Faction Hacking Work\"}}","AllServersSave":"{\"44.1.3.8\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"44.1.3.8\",\"hostname\":\"home\",\"organizationName\":\"Home PC\",\"isConnectedTo\":true,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":2048,\"ramUsed\":1543.15,\"cpuCores\":2,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"lib-log.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\nexport class Logger {\\r\\n    /**\\r\\n     * @constructor\\r\\n     * @param {IGame} ns\\r\\n     * @param {{showError?: boolean, showInfo?: boolean, showDebug?: boolean, termError?: boolean, termInfo?: boolean, termDebug?: boolean, disable?: boolean}} options\\r\\n     */\\r\\n    constructor(ns, options) {\\r\\n        this.ns = ns;\\r\\n        this.showError = typeof options.showError !== 'undefined' ? options.showError : true;\\r\\n        this.showInfo = typeof options.showInfo !== 'undefined' ? options.showInfo : true;\\r\\n        this.showDebug = typeof options.showDebug !== 'undefined' ? options.showDebug : true;\\r\\n        this.termError = typeof options.termError !== 'undefined' ? options.termError : true;\\r\\n        this.termInfo = typeof options.termInfo !== 'undefined' ? options.termInfo : false;\\r\\n        this.termDebug = typeof options.termDebug !== 'undefined' ? options.termDebug : false;\\r\\n\\r\\n        if (typeof options.disable !== 'undefined' ? options.disable : true) {\\r\\n            ns.disableLog('ALL');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    error(msg) {\\r\\n        if (this.showError) {\\r\\n            this.ns.print('[ERR] ' + msg);\\r\\n            if (this.termError) {\\r\\n                this.ns.tprint(msg);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    info(msg) {\\r\\n        if (this.showInfo) {\\r\\n            this.ns.print('[INF] ' + msg);\\r\\n            if (this.termInfo) {\\r\\n                this.ns.tprint(msg);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    debug(msg) {\\r\\n        if (this.showDebug) {\\r\\n            this.ns.print('[DBG] ' + msg);\\r\\n            if (this.termDebug) {\\r\\n                this.ns.tprint(msg);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\",\"ramUsage\":1.6,\"server\":\"44.1.3.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"buy-nodes.js\",\"code\":\"// @ts-check\\r\\nimport { Logger } from 'lib-log.js';\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    let loop = ns.args.includes('loop');\\r\\n    let debug = ns.args.includes('debug');\\r\\n    let log = new Logger(ns, { showDebug: true, termInfo: !loop, termDebug: !loop && debug });\\r\\n\\r\\n    let purchased = true;\\r\\n    let cash = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n\\r\\n    log.info('loading costs');\\r\\n    let numNodes = ns.hacknet.numNodes();\\r\\n    let costs = [];\\r\\n    for (let i = 0; i < numNodes; i++) {\\r\\n        costs.push(ns.hacknet.getLevelUpgradeCost(i, 1));\\r\\n        costs.push(ns.hacknet.getRamUpgradeCost(i, 1));\\r\\n        costs.push(ns.hacknet.getCoreUpgradeCost(i, 1));\\r\\n    }\\r\\n    let buyNodeCost = ns.hacknet.getPurchaseNodeCost();  \\r\\n\\r\\n    log.info('begin purchase loop');\\r\\n    while (purchased) {\\r\\n        purchased = false;\\r\\n\\r\\n        let minCost = Math.min.apply(null, costs);\\r\\n        let minIdx = costs.indexOf(minCost);\\r\\n        \\r\\n        if (buyNodeCost < minCost) {\\r\\n            if (buyNodeCost <= cash) {\\r\\n                let newIdx = numNodes;\\r\\n                \\r\\n                log.debug(`buy node[${newIdx}] - \\\\$${buyNodeCost}`);\\r\\n                ns.hacknet.purchaseNode();\\r\\n                buyNodeCost = ns.hacknet.getPurchaseNodeCost();\\r\\n                \\r\\n                costs.push(ns.hacknet.getLevelUpgradeCost(newIdx, 1));\\r\\n                costs.push(ns.hacknet.getRamUpgradeCost(newIdx, 1));\\r\\n                costs.push(ns.hacknet.getCoreUpgradeCost(newIdx, 1));\\r\\n                \\r\\n                numNodes = numNodes + 1;\\r\\n                cash = cash - minCost;\\r\\n                purchased = true;\\r\\n            }\\r\\n        } else if (minCost <= cash) {\\r\\n            let nodeIdx = Math.floor(minIdx / 3) % numNodes;\\r\\n            let itemIdx = minIdx - (nodeIdx * 3);\\r\\n            \\r\\n            let cost = minCost;\\r\\n            let count = 1;\\r\\n            \\r\\n            if (itemIdx == 0) {\\r\\n                while (cost * 3 < cash) {\\r\\n                    count = count + 1;\\r\\n                    cost = ns.hacknet.getLevelUpgradeCost(nodeIdx, count);\\r\\n                }\\r\\n\\r\\n                log.debug(`buy level[${nodeIdx}] x${count} - \\\\$${cost}`);\\r\\n                ns.hacknet.upgradeLevel(nodeIdx, count);\\r\\n                costs[minIdx] = ns.hacknet.getLevelUpgradeCost(nodeIdx, 1);\\r\\n            } else if (itemIdx == 1) {\\r\\n                while (cost * 3 < cash) {\\r\\n                    count = count + 1;\\r\\n                    cost = ns.hacknet.getRamUpgradeCost(nodeIdx, count);\\r\\n                }\\r\\n\\r\\n                log.debug(`buy ram[${nodeIdx}] x${count} - \\\\$${cost}`);\\r\\n                ns.hacknet.upgradeRam(nodeIdx, count);\\r\\n                costs[minIdx] = ns.hacknet.getRamUpgradeCost(nodeIdx, 1);\\r\\n            } else if (itemIdx == 2) {\\r\\n                while (cost * 3 < cash) {\\r\\n                    count = count + 1;\\r\\n                    cost = ns.hacknet.getCoreUpgradeCost(nodeIdx, count);\\r\\n                }\\r\\n\\r\\n                log.debug(`buy core[${nodeIdx}] x${count} - \\\\$${cost}`);\\r\\n                ns.hacknet.upgradeCore(nodeIdx, count);\\r\\n                costs[minIdx] = ns.hacknet.getCoreUpgradeCost(nodeIdx, 1);\\r\\n            }\\r\\n            \\r\\n            if (count == 1) {\\r\\n                cash = cash - cost;               \\r\\n            } else {\\r\\n                cash = ns.getServerMoneyAvailable(\\\"home\\\");\\r\\n            }\\r\\n            log.debug(`remaining budget: \\\\$${cash}`);\\r\\n            \\r\\n            purchased = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    log.info('purchase loop complete');\\r\\n\\r\\n    if (loop) {\\r\\n        await ns.sleep(60000);\\r\\n        ns.spawn('buy-nodes.js', 1, 'loop');\\r\\n    }\\r\\n}\",\"ramUsage\":7.7,\"server\":\"44.1.3.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"lib-servers.js\",\"code\":\"/// @ts-check\\r\\n\\r\\nexport class Server {\\r\\n    /**\\r\\n     * @param {string} name\\r\\n     * @param {number} ram\\r\\n     * @param {number} ports\\r\\n     * @param {string} [lock='']\\r\\n     */\\r\\n    constructor(name, ram, ports, lock) {\\r\\n        this.name = name;\\r\\n        this.ram = ram;\\r\\n        this.ports = ports;\\r\\n        this.lock = lock;\\r\\n        this.job = '';\\r\\n    }\\r\\n\\r\\n    canWork() {\\r\\n        return this.ram > 0;\\r\\n    }\\r\\n\\r\\n    print() {\\r\\n        if (typeof(this.job) === 'string' && this.job !== '') {\\r\\n            return `${this.name} (${this.ram}GB): ${this.job}`;\\r\\n        } else {\\r\\n            return `${this.name} (${this.ram}GB)`;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @param {IGame} ns\\r\\n */\\r\\nexport function bots(ns) {\\r\\n    let all = [];\\r\\n    for (let host of ns.getPurchasedServers(true)) {\\r\\n        let ram = ns.getServerRam(host);\\r\\n        all.push(new Server(host, ram[0], 0));\\r\\n    }\\r\\n    return all;\\r\\n}\\r\\n\\r\\n// notes: traversal past depth 10 is via defcomm and then zb-def\\r\\nexport function map() {\\r\\n    return [\\r\\n        new Server('home', 1536, 0, 'weaken'),\\r\\n        new Server('foodnstuff', 16, 0), \\r\\n        new Server('nectar-net', 16, 0), \\r\\n                new Server('neo-net', 32, 1), \\r\\n                    new Server('johnson-ortho', 0, 2), \\r\\n                    new Server('crush-fitness', 0, 2), \\r\\n                    new Server('avmnite-02h', 16, 2), \\r\\n                        new Server('I.I.I.I', 64, 3), \\r\\n                new Server('phantasy', 32, 2), \\r\\n                    new Server('the-hub', 8, 2), \\r\\n                        new Server('summit-uni', 64, 3), \\r\\n                            new Server('rho-construction', 16, 3), \\r\\n                    new Server('syscore', 0, 4), \\r\\n                new Server('comptek', 0, 3), \\r\\n                    new Server('zb-institute', 16, 5), \\r\\n                        new Server('alpha-ent', 16, 4), \\r\\n                            new Server('galactic-cyber', 0, 5), \\r\\n                                new Server('deltaone', 0, 5), \\r\\n                                    new Server('defcomm', 0, 5), \\r\\n                                        new Server('infocomm', 0, 5), \\r\\n                                            new Server('microdyne', 32, 5), \\r\\n                                        new Server('taiyang-digital', 0, 5), \\r\\n                                            new Server('titan-labs', 32, 5), \\r\\n                                        new Server('zb-def', 0, 4), \\r\\n                                            new Server('applied-energetics', 0, 4), \\r\\n                                                new Server('stormtech', 0, 5), \\r\\n                                                    new Server('kuai-gong', 0, 5), \\r\\n                                                        new Server('powerhouse-fitness', 16, 5), \\r\\n                                                            new Server('The-Cave', 0, 5), \\r\\n                                                    new Server('.', 16, 4), \\r\\n                                                        new Server('nwo', 0, 5), \\r\\n                                                new Server('helios', 128, 5), \\r\\n                                                    new Server('4sigma', 0, 5), \\r\\n                                                        new Server('b-and-a', 0, 5), \\r\\n                                                        new Server('blade', 64, 5), \\r\\n                                                            new Server('ecorp', 0, 5), \\r\\n                                                            new Server('megacorp', 0, 5), \\r\\n                                                            new Server('fulcrumassets', 0, 5), \\r\\n                                            new Server('run4theh111z', 256, 4), \\r\\n                                                new Server('fulcrumtech', 128, 5), \\r\\n                                                new Server('vitalife', 16, 5), \\r\\n                                                    new Server('omnitek', 256, 5), \\r\\n                                                        new Server('clarkinc', 0, 5), \\r\\n                                    new Server('univ-energy', 128, 4), \\r\\n                                    new Server('solaris', 16, 5), \\r\\n                                    new Server('zeus-med', 0, 5), \\r\\n                                        new Server('nova-med', 0, 4), \\r\\n                            new Server('aerocorp', 0, 5), \\r\\n                            new Server('global-pharm', 64, 4), \\r\\n                        new Server('aevum-police', 64, 4), \\r\\n        new Server('sigma-cosmetics', 16, 0), \\r\\n        new Server('joesguns', 16, 0), \\r\\n            new Server('zer0', 32, 1), \\r\\n                new Server('silver-helix', 64, 2),\\r\\n                    new Server('netlink', 16, 3), \\r\\n                        new Server('rothman-uni', 64, 3), \\r\\n                            new Server('lexo-corp', 128, 4), \\r\\n                                new Server('snap-fitness', 0, 4), \\r\\n                                    new Server('omnia', 64, 5), \\r\\n                                    new Server('unitalife', 32, 4), \\r\\n                                        new Server('icarus', 0, 5), \\r\\n                            new Server('millenium-fitness', 128, 3), \\r\\n                        new Server('catalyst', 32, 3), \\r\\n        new Server('hong-fang-tea', 16, 0), \\r\\n        new Server('harakiri-sushi', 16, 0), \\r\\n            new Server('CSEC', 8, 1), \\r\\n                new Server('omega-net', 32, 2), \\r\\n        new Server('iron-gym', 32, 1), \\r\\n            new Server('max-hardware', 32, 1), \\r\\n    ];\\r\\n}\\r\\n\\r\\n/**\\r\\n * @param {IGame} ns\\r\\n */\\r\\nexport function all(ns) {\\r\\n    return bots(ns).concat(map());\\r\\n}\",\"ramUsage\":3.95,\"server\":\"44.1.3.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-report-workers.js\",\"code\":\"// @ts-check\\r\\nimport { Logger } from 'lib-log.js';\\r\\nimport * as servers from 'lib-servers.js';\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var log = new Logger(ns, { termInfo: true });\\r\\n\\r\\n    var jobs = ['hack', 'grow', 'weaken'];\\r\\n    var counts = { hack: 0, grow: 0, weaken: 0 };\\r\\n\\r\\n    for (let worker of servers.all(ns)) {\\r\\n        if (worker.canWork()) {\\r\\n            for (var jID in jobs) {\\r\\n                var job = jobs[jID];\\r\\n                if (ns.scriptRunning('dh-worker-' + job + '.js', worker.name)) {\\r\\n                    worker.job = job;\\r\\n                    counts[job] += worker.ram;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            log.debug(worker.print());\\r\\n        }\\r\\n    }\\r\\n\\r\\n    log.info(`total hack(): ${counts.hack}GB`);\\r\\n    log.info(`total grow(): ${counts.grow}GB`);\\r\\n    log.info(`total weaken(): ${counts.weaken}GB`);\\r\\n}\",\"ramUsage\":5.35,\"server\":\"44.1.3.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-report-targets.js\",\"code\":\"// @ts-check\\r\\nimport { Logger } from 'lib-log.js';\\r\\nimport * as servers from 'lib-servers.js';\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var log = new Logger(ns, { termInfo: true });\\r\\n    \\r\\n    for (let worker of servers.map()) {\\r\\n        let root = worker.name;\\r\\n\\r\\n        let hackLevel = ns.getServerRequiredHackingLevel(root)\\r\\n        if (hackLevel <= ns.getHackingLevel()) {\\r\\n            log.info('----- SERVER: ' + root + ' -----');\\r\\n            \\r\\n            let hackChance = ns.hackChance(root);        \\r\\n            let hackRate = ns.hackAnalyzePercent(root);\\r\\n            log.info(`Requires Hacking ${hackLevel}; chance ${Math.floor(hackChance*100)/100}%, per-hack ${Math.floor(hackRate*100)/100}%`);\\r\\n            \\r\\n            var moneyAvailable = ns.getServerMoneyAvailable(root);\\r\\n            var maxMoney = ns.getServerMaxMoney(root);\\r\\n            var growthRate = ns.getServerGrowth(root);\\r\\n            log.info(`Money: \\\\$${Math.floor(moneyAvailable)}/\\\\$${maxMoney} (${Math.ceil(moneyAvailable / maxMoney * 100)}%); growth param ${growthRate}`);\\r\\n        \\r\\n            var sec = ns.getServerSecurityLevel(root);\\r\\n            var secBase = ns.getServerBaseSecurityLevel(root);\\r\\n            log.info('Security level: ' + sec + ' (' + secBase + ' base)');\\r\\n\\r\\n            log.info('');\\r\\n        }\\r\\n    }\\r\\n}\",\"ramUsage\":4.25,\"server\":\"44.1.3.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"44.1.3.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"44.1.3.8\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"44.1.3.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-control.js\",\"code\":\"// @ts-check\\r\\nimport { Logger } from 'lib-log.js';\\r\\nimport * as servers from 'lib-servers.js';\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    /** @type {servers.Server[]} */\\r\\n    let workerMap = [];\\r\\n    let log = new Logger(ns, { showInfo: true, showDebug: false, termInfo: false, termDebug: false });\\r\\n\\r\\n    /** \\r\\n     * @param {servers.Server} worker\\r\\n     * @param {string} worker\\r\\n     */\\r\\n    async function setJob(worker, job) {\\r\\n        let script = 'dh-worker-' + job + '.js';\\r\\n        ns.scp(script, worker.name);\\r\\n        \\r\\n        let cost = ns.getScriptRam(script, worker.name);\\r\\n        let threads = Math.floor(worker.ram / cost);\\r\\n        log.info(`assigning ${worker.name} ${worker.job} -> ${job} x${threads}`);\\r\\n        \\r\\n        if (stopJob(worker)) {\\r\\n            log.debug('stopping old job');\\r\\n            while (ns.getServerRam(worker.name)[1] > 0) { \\r\\n                await ns.sleep(100);\\r\\n            }\\r\\n            log.debug('old job stopped');\\r\\n        }\\r\\n\\r\\n        await ns.exec(script, worker.name, threads, target);\\r\\n        log.debug('new job started');\\r\\n        \\r\\n        worker.job = job;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @param {servers.Server} worker\\r\\n     */\\r\\n    function stopJob(worker) {\\r\\n        if (typeof worker.lock == 'string') {\\r\\n            return ns.scriptKill(`dh-worker-${worker.lock}.js`, worker.name);\\r\\n        } else {\\r\\n            return ns.killall(worker.name);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @param {string} job\\r\\n     * @param {function(number, number): boolean} f\\r\\n     */\\r\\n    function find(job, f) {\\r\\n        /** @type {servers.Server} */\\r\\n        let worker = null;\\r\\n        for (let w of workerMap) {\\r\\n            if (typeof w.lock == 'undefined' && w.job === job && (worker == null || f(w.ram, worker.ram))) {\\r\\n                worker = w;\\r\\n            }\\r\\n        }\\r\\n        return worker;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @param {string} job\\r\\n     */\\r\\n    function findAll(job) {\\r\\n        let workers = [];\\r\\n        for (let worker of workerMap) {\\r\\n            if (worker.job === job) {\\r\\n                workers.push(worker);\\r\\n            }\\r\\n        }\\r\\n        return workers;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @param {string} oldJob\\r\\n     * @param {string} newJob\\r\\n     * @param {boolean} [fast=false]\\r\\n     */\\r\\n    async function swapJob(oldJob, newJob, fast) {\\r\\n        let victim = find(oldJob, fast ? (x, y) => x > y : (x, y) => x < y);\\r\\n        if (victim != null) { \\r\\n            await setJob(victim, newJob);\\r\\n        } else {\\r\\n            log.error(`trying to assign from ${oldJob} -> ${newJob} but no workers are available`);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @param {servers.Server} worker\\r\\n     */\\r\\n    function enrol(worker) {\\r\\n        log.debug('enrolling ' + worker.name);\\r\\n        \\r\\n        ns.brutessh(worker.name);\\r\\n        ns.ftpcrack(worker.name);\\r\\n        ns.relaysmtp(worker.name);\\r\\n        ns.httpworm(worker.name);\\r\\n        ns.sqlinject(worker.name);\\r\\n        ns.nuke(worker.name);\\r\\n        \\r\\n        log.debug('...got root');\\r\\n    }\\r\\n\\r\\n    log.info('scan target...');\\r\\n    if (ns.args.length < 1) log.error('hostname required');\\r\\n    var target = ns.args[0];\\r\\n    if (!ns.hasRootAccess(target)) {\\r\\n        enrol(target);\\r\\n    }\\r\\n\\r\\n    var targetSecMin = ns.getServerMinSecurityLevel(target);\\r\\n    var targetSecBase = ns.getServerBaseSecurityLevel(target);\\r\\n    var targetSecGoal = ((targetSecBase - targetSecMin) / 2) + targetSecMin;\\r\\n    log.info(\\\"goal: security level <= \\\" + Math.floor(targetSecGoal));\\r\\n\\r\\n    var targetMoney = ns.getServerMoneyAvailable(target);\\r\\n    var targetMoneyMax = ns.getServerMaxMoney(target);\\r\\n    var targetMoneyGoal = targetMoneyMax * (ns.args.length < 2 ? 0.5 : ns.args[1]);\\r\\n    log.info(\\\"goal: available money >= $\\\" + Math.floor(targetMoneyGoal));\\r\\n\\r\\n    // not currently used, it seems more effective to respond rapidly in small increments\\r\\n    // var targetTimeGrow = ns.getGrowTime(target);\\r\\n    // var targetTimeWeaken = ns.getWeakenTime(target);\\r\\n    // var targetTimeGoal = Math.max(targetTimeGrow, targetTimeWeaken) * 1000; \\r\\n    // log.info(\\\"goal: sleep \\\" + Math.floor(targetTimeGoal) + \\\"ms\\\");\\r\\n\\r\\n    log.info('scan workers...');\\r\\n    let jobs = ['hack', 'grow', 'weaken'];\\r\\n\\r\\n    for (let worker of servers.all(ns)) {\\r\\n        if (worker.canWork()) {            \\r\\n            for (let job of jobs) {\\r\\n                if (ns.isRunning('dh-worker-' + job + '.js', worker.name, target)) {\\r\\n                    worker.job = job;\\r\\n                }\\r\\n            }\\r\\n            \\r\\n            log.debug(worker.print());\\r\\n            workerMap.push(worker);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    log.info('assign idle workers...');\\r\\n    for (let worker of workerMap) {\\r\\n        if (worker.job === '') {\\r\\n            if (!ns.hasRootAccess(worker.name)) {\\r\\n                enrol(worker);\\r\\n            } \\r\\n            \\r\\n            if (typeof worker.lock == 'string') {\\r\\n                await setJob(worker, worker.lock);\\r\\n            } else if (targetMoney > targetMoneyGoal) {\\r\\n                await setJob(worker, 'hack');\\r\\n            } else {\\r\\n                await setJob(worker, 'grow');\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    log.info('monitor...');\\r\\n    targetMoney = ns.getServerMoneyAvailable(target);\\r\\n    let moneyReadings = [targetMoney, targetMoney, targetMoney];\\r\\n    let targetSec = ns.getServerSecurityLevel(target);\\r\\n    let secReadings = [targetSec, targetSec, targetSec];\\r\\n    \\r\\n    while (true) {\\r\\n        targetMoney = ns.getServerMoneyAvailable(target);\\r\\n        targetSec = ns.getServerSecurityLevel(target);\\r\\n\\r\\n        secReadings[0] = secReadings[1];\\r\\n        secReadings[1] = secReadings[2];\\r\\n        secReadings[2] = targetSec;\\r\\n\\r\\n        let secDecreasing = secReadings[2] < secReadings[1] && secReadings[1] < secReadings[0];\\r\\n        let secIncreasing = secReadings[2] > secReadings[1] && secReadings[1] > secReadings[0];\\r\\n\\r\\n        log.info(`status: security level ${Math.floor(targetSec)} / goal ${Math.floor(targetSecGoal)}; ${secIncreasing ? 'increasing' : ''}${secDecreasing ? 'decreasing' : ''}`);\\r\\n\\r\\n        moneyReadings[0] = moneyReadings[1];\\r\\n        moneyReadings[1] = moneyReadings[2];\\r\\n        moneyReadings[2] = targetMoney;\\r\\n        \\r\\n        let moneyDecreasing = moneyReadings[2] < moneyReadings[1] && moneyReadings[1] < moneyReadings[0];\\r\\n        let moneyIncreasing = moneyReadings[2] > moneyReadings[1] && moneyReadings[1] > moneyReadings[0];\\r\\n\\r\\n        log.info(`status: money \\\\$${Math.floor(targetMoney)} / goal \\\\$${Math.floor(targetMoneyGoal)}; ${moneyIncreasing ? 'increasing' : ''}${moneyDecreasing ? 'decreasing' : ''}`);\\r\\n\\r\\n        if (targetSec > targetSecGoal && !secDecreasing) {\\r\\n            if (findAll('hack').length > 0) {\\r\\n                await swapJob('hack', 'weaken');\\r\\n            } else {\\r\\n                await swapJob('grow', 'weaken');\\r\\n            }\\r\\n        } else if (targetSec < targetSecGoal && !secIncreasing) {\\r\\n            if (targetMoney < targetMoneyGoal || moneyDecreasing) {\\r\\n                await swapJob('weaken', 'grow');\\r\\n            } else {\\r\\n                await swapJob('weaken', 'hack');\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        if (targetMoney < targetMoneyGoal && !moneyIncreasing) {\\r\\n            if (findAll('hack').length > 0) {\\r\\n                await swapJob('hack', 'grow', true);\\r\\n            }\\r\\n        } else if (targetMoney > targetMoneyGoal && !moneyDecreasing) {\\r\\n            if (findAll('grow').length > 0) {\\r\\n                await swapJob('grow', 'hack');\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        await ns.sleep(30000);\\r\\n    }\\r\\n}\",\"ramUsage\":8.4,\"server\":\"44.1.3.8\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"44.1.3.8\",\"module\":\"\"}},\"server\":\"44.1.3.8\",\"logs\":[\"Called weaken() on zer0 20 times while offline\",\"Executing weaken() on server zer0 in 117.285 seconds (t=877)\",\"Server security level on zer0 weakened to 8. Gained 9,208.5000 hacking exp (t=877)\",\"Executing weaken() on server zer0 in 110.803 seconds (t=877)\"],\"logUpd\":true,\"offlineRunningTime\":5.795999999999999,\"offlineMoneyMade\":0,\"offlineExpGained\":9.250066145833333,\"onlineRunningTime\":812.8100000000479,\"onlineMoneyMade\":0,\"onlineExpGained\":55251,\"threads\":877,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,0,5262],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}},{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-control.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-control.js\",\"code\":\"// @ts-check\\r\\nimport { Logger } from 'lib-log.js';\\r\\nimport * as servers from 'lib-servers.js';\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    /** @type {servers.Server[]} */\\r\\n    let workerMap = [];\\r\\n    let log = new Logger(ns, { showInfo: true, showDebug: false, termInfo: false, termDebug: false });\\r\\n\\r\\n    /** \\r\\n     * @param {servers.Server} worker\\r\\n     * @param {string} worker\\r\\n     */\\r\\n    async function setJob(worker, job) {\\r\\n        let script = 'dh-worker-' + job + '.js';\\r\\n        ns.scp(script, worker.name);\\r\\n        \\r\\n        let cost = ns.getScriptRam(script, worker.name);\\r\\n        let threads = Math.floor(worker.ram / cost);\\r\\n        log.info(`assigning ${worker.name} ${worker.job} -> ${job} x${threads}`);\\r\\n        \\r\\n        if (stopJob(worker)) {\\r\\n            log.debug('stopping old job');\\r\\n            while (ns.getServerRam(worker.name)[1] > 0) { \\r\\n                await ns.sleep(100);\\r\\n            }\\r\\n            log.debug('old job stopped');\\r\\n        }\\r\\n\\r\\n        await ns.exec(script, worker.name, threads, target);\\r\\n        log.debug('new job started');\\r\\n        \\r\\n        worker.job = job;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @param {servers.Server} worker\\r\\n     */\\r\\n    function stopJob(worker) {\\r\\n        if (typeof worker.lock == 'string') {\\r\\n            return ns.scriptKill(`dh-worker-${worker.lock}.js`, worker.name);\\r\\n        } else {\\r\\n            return ns.killall(worker.name);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @param {string} job\\r\\n     * @param {function(number, number): boolean} f\\r\\n     */\\r\\n    function find(job, f) {\\r\\n        /** @type {servers.Server} */\\r\\n        let worker = null;\\r\\n        for (let w of workerMap) {\\r\\n            if (typeof w.lock == 'undefined' && w.job === job && (worker == null || f(w.ram, worker.ram))) {\\r\\n                worker = w;\\r\\n            }\\r\\n        }\\r\\n        return worker;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @param {string} job\\r\\n     */\\r\\n    function findAll(job) {\\r\\n        let workers = [];\\r\\n        for (let worker of workerMap) {\\r\\n            if (worker.job === job) {\\r\\n                workers.push(worker);\\r\\n            }\\r\\n        }\\r\\n        return workers;\\r\\n    }\\r\\n    \\r\\n    /**\\r\\n     * @param {string} oldJob\\r\\n     * @param {string} newJob\\r\\n     * @param {boolean} [fast=false]\\r\\n     */\\r\\n    async function swapJob(oldJob, newJob, fast) {\\r\\n        let victim = find(oldJob, fast ? (x, y) => x > y : (x, y) => x < y);\\r\\n        if (victim != null) { \\r\\n            await setJob(victim, newJob);\\r\\n        } else {\\r\\n            log.error(`trying to assign from ${oldJob} -> ${newJob} but no workers are available`);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @param {servers.Server} worker\\r\\n     */\\r\\n    function enrol(worker) {\\r\\n        log.debug('enrolling ' + worker.name);\\r\\n        \\r\\n        ns.brutessh(worker.name);\\r\\n        ns.ftpcrack(worker.name);\\r\\n        ns.relaysmtp(worker.name);\\r\\n        ns.httpworm(worker.name);\\r\\n        ns.sqlinject(worker.name);\\r\\n        ns.nuke(worker.name);\\r\\n        \\r\\n        log.debug('...got root');\\r\\n    }\\r\\n\\r\\n    log.info('scan target...');\\r\\n    if (ns.args.length < 1) log.error('hostname required');\\r\\n    var target = ns.args[0];\\r\\n    if (!ns.hasRootAccess(target)) {\\r\\n        enrol(target);\\r\\n    }\\r\\n\\r\\n    var targetSecMin = ns.getServerMinSecurityLevel(target);\\r\\n    var targetSecBase = ns.getServerBaseSecurityLevel(target);\\r\\n    var targetSecGoal = ((targetSecBase - targetSecMin) / 2) + targetSecMin;\\r\\n    log.info(\\\"goal: security level <= \\\" + Math.floor(targetSecGoal));\\r\\n\\r\\n    var targetMoney = ns.getServerMoneyAvailable(target);\\r\\n    var targetMoneyMax = ns.getServerMaxMoney(target);\\r\\n    var targetMoneyGoal = targetMoneyMax * (ns.args.length < 2 ? 0.5 : ns.args[1]);\\r\\n    log.info(\\\"goal: available money >= $\\\" + Math.floor(targetMoneyGoal));\\r\\n\\r\\n    // not currently used, it seems more effective to respond rapidly in small increments\\r\\n    // var targetTimeGrow = ns.getGrowTime(target);\\r\\n    // var targetTimeWeaken = ns.getWeakenTime(target);\\r\\n    // var targetTimeGoal = Math.max(targetTimeGrow, targetTimeWeaken) * 1000; \\r\\n    // log.info(\\\"goal: sleep \\\" + Math.floor(targetTimeGoal) + \\\"ms\\\");\\r\\n\\r\\n    log.info('scan workers...');\\r\\n    let jobs = ['hack', 'grow', 'weaken'];\\r\\n\\r\\n    for (let worker of servers.all(ns)) {\\r\\n        if (worker.canWork()) {            \\r\\n            for (let job of jobs) {\\r\\n                if (ns.isRunning('dh-worker-' + job + '.js', worker.name, target)) {\\r\\n                    worker.job = job;\\r\\n                }\\r\\n            }\\r\\n            \\r\\n            log.debug(worker.print());\\r\\n            workerMap.push(worker);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    log.info('assign idle workers...');\\r\\n    for (let worker of workerMap) {\\r\\n        if (worker.job === '') {\\r\\n            if (!ns.hasRootAccess(worker.name)) {\\r\\n                enrol(worker);\\r\\n            } \\r\\n            \\r\\n            if (typeof worker.lock == 'string') {\\r\\n                await setJob(worker, worker.lock);\\r\\n            } else if (targetMoney > targetMoneyGoal) {\\r\\n                await setJob(worker, 'hack');\\r\\n            } else {\\r\\n                await setJob(worker, 'grow');\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    log.info('monitor...');\\r\\n    targetMoney = ns.getServerMoneyAvailable(target);\\r\\n    let moneyReadings = [targetMoney, targetMoney, targetMoney];\\r\\n    let targetSec = ns.getServerSecurityLevel(target);\\r\\n    let secReadings = [targetSec, targetSec, targetSec];\\r\\n    \\r\\n    while (true) {\\r\\n        targetMoney = ns.getServerMoneyAvailable(target);\\r\\n        targetSec = ns.getServerSecurityLevel(target);\\r\\n\\r\\n        secReadings[0] = secReadings[1];\\r\\n        secReadings[1] = secReadings[2];\\r\\n        secReadings[2] = targetSec;\\r\\n\\r\\n        let secDecreasing = secReadings[2] < secReadings[1] && secReadings[1] < secReadings[0];\\r\\n        let secIncreasing = secReadings[2] > secReadings[1] && secReadings[1] > secReadings[0];\\r\\n\\r\\n        log.info(`status: security level ${Math.floor(targetSec)} / goal ${Math.floor(targetSecGoal)}; ${secIncreasing ? 'increasing' : ''}${secDecreasing ? 'decreasing' : ''}`);\\r\\n\\r\\n        moneyReadings[0] = moneyReadings[1];\\r\\n        moneyReadings[1] = moneyReadings[2];\\r\\n        moneyReadings[2] = targetMoney;\\r\\n        \\r\\n        let moneyDecreasing = moneyReadings[2] < moneyReadings[1] && moneyReadings[1] < moneyReadings[0];\\r\\n        let moneyIncreasing = moneyReadings[2] > moneyReadings[1] && moneyReadings[1] > moneyReadings[0];\\r\\n\\r\\n        log.info(`status: money \\\\$${Math.floor(targetMoney)} / goal \\\\$${Math.floor(targetMoneyGoal)}; ${moneyIncreasing ? 'increasing' : ''}${moneyDecreasing ? 'decreasing' : ''}`);\\r\\n\\r\\n        if (targetSec > targetSecGoal && !secDecreasing) {\\r\\n            if (findAll('hack').length > 0) {\\r\\n                await swapJob('hack', 'weaken');\\r\\n            } else {\\r\\n                await swapJob('grow', 'weaken');\\r\\n            }\\r\\n        } else if (targetSec < targetSecGoal && !secIncreasing) {\\r\\n            if (targetMoney < targetMoneyGoal || moneyDecreasing) {\\r\\n                await swapJob('weaken', 'grow');\\r\\n            } else {\\r\\n                await swapJob('weaken', 'hack');\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        if (targetMoney < targetMoneyGoal && !moneyIncreasing) {\\r\\n            if (findAll('hack').length > 0) {\\r\\n                await swapJob('hack', 'grow', true);\\r\\n            }\\r\\n        } else if (targetMoney > targetMoneyGoal && !moneyDecreasing) {\\r\\n            if (findAll('grow').length > 0) {\\r\\n                await swapJob('grow', 'hack');\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        await ns.sleep(30000);\\r\\n    }\\r\\n}\",\"ramUsage\":8.4,\"server\":\"44.1.3.8\",\"module\":\"\"}},\"server\":\"44.1.3.8\",\"logs\":[\"[INF] scan target...\",\"[INF] goal: security level <= 16\",\"[INF] goal: available money >= $93750000\",\"[INF] scan workers...\",\"[INF] assign idle workers...\",\"[INF] monitor...\",\"[INF] status: security level 8 / goal 16; \",\"[INF] status: money $37566565 / goal $93750000; \",\"[INF] assigning netlink weaken -> grow x9\",\"[INF] assigning iron-gym hack -> grow x18\",\"[INF] status: security level 8 / goal 16; \",\"[INF] status: money $27632255 / goal $93750000; \",\"[INF] assigning hong-fang-tea weaken -> grow x9\",\"[INF] assigning foodnstuff hack -> grow x9\",\"[INF] status: security level 9 / goal 16; increasing\",\"[INF] status: money $21621286 / goal $93750000; decreasing\",\"[INF] assigning nectar-net hack -> grow x9\",\"[INF] status: security level 8 / goal 16; \",\"[INF] status: money $45669096 / goal $93750000; \",\"[INF] assigning harakiri-sushi weaken -> grow x9\",\"[INF] assigning avmnite-02h hack -> grow x9\",\"[INF] status: security level 8 / goal 16; \",\"[INF] status: money $38819393 / goal $93750000; \",\"[INF] assigning neo-net weaken -> grow x18\",\"[INF] assigning rho-construction hack -> grow x9\"],\"logUpd\":true,\"offlineRunningTime\":5.797,\"offlineMoneyMade\":0,\"offlineExpGained\":0,\"onlineRunningTime\":774.6100000000392,\"onlineMoneyMade\":0,\"onlineExpGained\":0,\"threads\":1,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[\"NUKE.exe\",\"fl1ght.exe\",\"AutoLink.exe\",\"BruteSSH.exe\",\"FTPCrack.exe\",\"DeepscanV1.exe\",\"ServerProfiler.exe\",\"relaySMTP.exe\",\"SQLInject.exe\",\"HTTPWorm.exe\",\"DeepscanV2.exe\"],\"messages\":[\"hackers-starting-handbook.lit\",\"sector-12-crime.lit\",{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},\"brighter-than-the-sun.lit\",{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and hack our server using the Terminal. <br><br>-CyberSec\",\"recvd\":true}},\"the-hidden-world.lit\",\"democracy-is-dead.lit\",\"the-new-god.lit\",\"new-triads.lit\",{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and hack our hidden server using the Terminal. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":true}},\"secret-societies.lit\",\"synthetic-muscles.lit\",\"the-failed-frontier.lit\",\"man-and-machine.lit\",\"simulated-reality.lit\",\"tensions-in-tech-race.lit\",\"A-Green-Tomorrow.lit\",\"alpha-omega.lit\"],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"23.0.9.7\",\"6.1.5.8\",\"86.9.6.7\",\"51.5.1.5\",\"28.9.5.9\",\"85.5.1.8\",\"60.2.8.2\",\"3.1.6.8\",\"44.4.7.3\",\"73.2.2.9\",\"48.6.7.4\",\"18.4.4.1\",\"69.8.5.5\",\"7.5.5.4\",\"5.2.5.4\",\"79.4.5.9\",\"32.7.8.8\",\"21.7.2.8\",\"53.0.3.8\",\"94.4.9.4\",\"67.8.8.9\",\"44.2.7.2\",\"34.1.1.2\",\"22.2.9.3\",\"67.6.1.1\",\"21.8.0.4\",\"24.6.1.4\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"23.9.3.8\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"23.9.3.8\",\"hostname\":\"ecorp\",\"organizationName\":\"ECorp\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1244,\"moneyAvailable\":40101817285,\"moneyMax\":1002545432125,\"hackDifficulty\":99,\"baseDifficulty\":99,\"minDifficulty\":33,\"serverGrowth\":99,\"serversOnNetwork\":[\"41.3.6.7\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"67.4.0.3\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"67.4.0.3\",\"hostname\":\"megacorp\",\"organizationName\":\"MegaCorp\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-138518.cct\",\"type\":\"Array Jumping Game\",\"data\":[2,0,0,2,9,9,0,4,0,3,0,0,10,0,10,2,0,1,0,4,0,5],\"reward\":{\"type\":1}}}],\"dir\":0,\"requiredHackingSkill\":1122,\"moneyAvailable\":46691746629,\"moneyMax\":1167293665725,\"hackDifficulty\":99,\"baseDifficulty\":99,\"minDifficulty\":33,\"serverGrowth\":99,\"serversOnNetwork\":[\"41.3.6.7\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"90.2.2.9\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"90.2.2.9\",\"hostname\":\"b-and-a\",\"organizationName\":\"Bachman & Associates\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-730015.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-3,-1,4,-1,-8,9,1,9,7,1,5,-2],\"reward\":{\"type\":3}}}],\"dir\":0,\"requiredHackingSkill\":977,\"moneyAvailable\":22869134444,\"moneyMax\":571728361100,\"hackDifficulty\":74,\"baseDifficulty\":74,\"minDifficulty\":25,\"serverGrowth\":77,\"serversOnNetwork\":[\"90.0.4.0\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"41.3.6.7\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"41.3.6.7\",\"hostname\":\"blade\",\"organizationName\":\"Blade Industries\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":64,\"ramUsed\":63,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"41.3.6.7\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"41.3.6.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"41.3.6.7\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"41.3.6.7\",\"module\":\"\"}},\"server\":\"41.3.6.7\",\"logs\":[\"Called grow() on zer0 1 times while offline\",\"zer0 grown by 13.985327% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=36)\",\"Available money on zer0 grown by 4.847223%. Gained 378.0000 hacking exp (t=36)\",\"Executing grow() on server zer0 in 99.080 seconds (t=36)\"],\"logUpd\":true,\"offlineRunningTime\":5.797,\"offlineMoneyMade\":0,\"offlineExpGained\":0.075954375,\"onlineRunningTime\":284.6099999999924,\"onlineMoneyMade\":0,\"onlineExpGained\":756,\"threads\":36,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,72,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"beyond-man.lit\"],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":983,\"moneyAvailable\":25631131575,\"moneyMax\":640778289375,\"hackDifficulty\":90,\"baseDifficulty\":90,\"minDifficulty\":30,\"serverGrowth\":58,\"serversOnNetwork\":[\"90.0.4.0\",\"23.9.3.8\",\"67.4.0.3\",\"75.2.7.6\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"21.6.9.4\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"21.6.9.4\",\"hostname\":\"nwo\",\"organizationName\":\"New World Order\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[\"the-hidden-world.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-509176-AlphaEnterprises.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[22,27],[25,33],[1,11],[21,29]],\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}}],\"dir\":0,\"requiredHackingSkill\":1125,\"moneyAvailable\":26516190291,\"moneyMax\":662904757275,\"hackDifficulty\":99,\"baseDifficulty\":99,\"minDifficulty\":33,\"serverGrowth\":91,\"serversOnNetwork\":[\"89.6.0.4\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"3.2.0.1\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"3.2.0.1\",\"hostname\":\"clarkinc\",\"organizationName\":\"Clarke Incorporated\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1019,\"moneyAvailable\":23248786594,\"moneyMax\":581219664850,\"hackDifficulty\":63,\"baseDifficulty\":63,\"minDifficulty\":21,\"serverGrowth\":52,\"serversOnNetwork\":[\"75.1.2.5\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"75.1.2.5\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"75.1.2.5\",\"hostname\":\"omnitek\",\"organizationName\":\"OmniTek Incorporated\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":256,\"ramUsed\":255.5,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"75.1.2.5\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"75.1.2.5\",\"module\":\"\"}},\"server\":\"75.1.2.5\",\"logs\":[\"Called grow() on zer0 3 times while offline\",\"zer0 grown by 42.014686% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=146)\",\"Available money on zer0 grown by 20.802175%. Gained 1,533.0000 hacking exp (t=146)\",\"Executing grow() on server zer0 in 103.934 seconds (t=146)\"],\"logUpd\":true,\"offlineRunningTime\":26.48,\"offlineMoneyMade\":0,\"offlineExpGained\":93.08313623566659,\"onlineRunningTime\":49531.40999984013,\"onlineMoneyMade\":0,\"onlineExpGained\":481362,\"threads\":146,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,45844,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1053,\"moneyAvailable\":13923042675,\"moneyMax\":348076066875,\"hackDifficulty\":95,\"baseDifficulty\":95,\"minDifficulty\":32,\"serverGrowth\":95,\"serversOnNetwork\":[\"15.0.1.4\",\"3.2.0.1\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"90.0.4.0\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"90.0.4.0\",\"hostname\":\"4sigma\",\"organizationName\":\"FourSigma\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-232697.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[125,59,126,26,72,44,67,40,181,159,49,101,114,71,178,191,27,47],\"reward\":{\"type\":3}}}],\"dir\":0,\"requiredHackingSkill\":1158,\"moneyAvailable\":19583137548,\"moneyMax\":489578438700,\"hackDifficulty\":63,\"baseDifficulty\":63,\"minDifficulty\":21,\"serverGrowth\":83,\"serversOnNetwork\":[\"1.3.5.4\",\"90.2.2.9\",\"41.3.6.7\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"2.9.1.7\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"2.9.1.7\",\"hostname\":\"kuai-gong\",\"organizationName\":\"KuaiGong International\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1140,\"moneyAvailable\":20219462431,\"moneyMax\":505486560775,\"hackDifficulty\":99,\"baseDifficulty\":99,\"minDifficulty\":33,\"serverGrowth\":90,\"serversOnNetwork\":[\"55.4.4.3\",\"10.0.7.7\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"5.3.6.1\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"5.3.6.1\",\"hostname\":\"fulcrumtech\",\"organizationName\":\"Fulcrum Technologies\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":128,\"ramUsed\":127.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"5.3.6.1\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"5.3.6.1\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"5.3.6.1\",\"module\":\"\"}},\"server\":\"5.3.6.1\",\"logs\":[\"Called grow() on zer0 1 times while offline\",\"zer0 grown by 13.985327% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=73)\",\"Available money on zer0 grown by 9.296270%. Gained 766.5000 hacking exp (t=73)\",\"Executing grow() on server zer0 in 106.393 seconds (t=73)\"],\"logUpd\":true,\"offlineRunningTime\":26.481,\"offlineMoneyMade\":0,\"offlineExpGained\":31.77574713030088,\"onlineRunningTime\":45126.40999990423,\"onlineMoneyMade\":0,\"onlineExpGained\":220752,\"threads\":73,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,21024,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"simulated-reality.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-204147.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[36,13,141,130,14,159,139,6,26,99,44,199,162,28,80,6,169,116,166,191,102,30,177,112,90,124,195,103,175],\"reward\":{\"type\":3}}}],\"dir\":0,\"requiredHackingSkill\":1186,\"moneyAvailable\":1640159586,\"moneyMax\":41003989650,\"hackDifficulty\":97,\"baseDifficulty\":97,\"minDifficulty\":32,\"serverGrowth\":95,\"serversOnNetwork\":[\"58.1.9.0\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"75.2.7.6\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"75.2.7.6\",\"hostname\":\"fulcrumassets\",\"organizationName\":\"Fulcrum Technologies Assets\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-745306.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[129,53,132,140,29,39,22,57,118,176,53,151,86,115,10,112,73,181,117,51,168,177,174,125,95,109,51,29,103,140,178,58,191,3,126,29,90],\"reward\":{\"type\":1}}}],\"dir\":0,\"requiredHackingSkill\":1240,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"hackDifficulty\":99,\"baseDifficulty\":99,\"minDifficulty\":33,\"serverGrowth\":1,\"serversOnNetwork\":[\"41.3.6.7\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"55.4.4.3\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"55.4.4.3\",\"hostname\":\"stormtech\",\"organizationName\":\"Storm Technologies\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1051,\"moneyAvailable\":1056712077,\"moneyMax\":26417801925,\"hackDifficulty\":82,\"baseDifficulty\":82,\"minDifficulty\":27,\"serverGrowth\":78,\"serversOnNetwork\":[\"95.5.5.2\",\"2.9.1.7\",\"89.6.0.4\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"3.6.7.1\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"3.6.7.1\",\"hostname\":\"defcomm\",\"organizationName\":\"DefComm\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-825547.cct\",\"type\":\"Total Ways to Sum\",\"data\":70,\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-138582.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[7,11],[3,6],[16,17],[22,30],[1,5],[25,26],[20,24]],\"reward\":{\"type\":1}}}],\"dir\":0,\"requiredHackingSkill\":998,\"moneyAvailable\":922321260,\"moneyMax\":23058031500,\"hackDifficulty\":86,\"baseDifficulty\":86,\"minDifficulty\":29,\"serverGrowth\":62,\"serversOnNetwork\":[\"82.6.6.2\",\"55.7.0.6\",\"39.5.4.9\",\"71.2.9.1\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"55.7.0.6\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"55.7.0.6\",\"hostname\":\"infocomm\",\"organizationName\":\"InfoComm\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-4442-NiteSec.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[17,27],[12,20],[1,10],[6,14],[22,29],[14,20],[17,19],[25,35],[4,13],[8,16],[21,22],[15,21],[10,18],[15,18],[8,12],[13,14],[15,19],[23,24]],\"reward\":{\"type\":0,\"name\":\"NiteSec\"}}}],\"dir\":0,\"requiredHackingSkill\":881,\"moneyAvailable\":859973389,\"moneyMax\":21499334725,\"hackDifficulty\":77,\"baseDifficulty\":77,\"minDifficulty\":26,\"serverGrowth\":41,\"serversOnNetwork\":[\"3.6.7.1\",\"29.8.0.1\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"1.3.5.4\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"1.3.5.4\",\"hostname\":\"helios\",\"organizationName\":\"Helios Labs\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":128,\"ramUsed\":127.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"1.3.5.4\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"1.3.5.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"1.3.5.4\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"1.3.5.4\",\"module\":\"\"}},\"server\":\"1.3.5.4\",\"logs\":[\"Called grow() on zer0 1 times while offline\",\"zer0 grown by 13.985327% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=73)\",\"Available money on zer0 grown by 9.013315%. Gained 766.5000 hacking exp (t=73)\",\"Executing grow() on server zer0 in 108.820 seconds (t=73)\"],\"logUpd\":true,\"offlineRunningTime\":26.482000000000003,\"offlineMoneyMade\":0,\"offlineExpGained\":31.814569737617653,\"onlineRunningTime\":45162.409999903706,\"onlineMoneyMade\":0,\"onlineExpGained\":221518.5,\"threads\":73,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,21097,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"beyond-man.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-767837.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"2374154255\",\"reward\":{\"type\":3}}}],\"dir\":0,\"requiredHackingSkill\":819,\"moneyAvailable\":635660616,\"moneyMax\":15891515400,\"hackDifficulty\":88,\"baseDifficulty\":88,\"minDifficulty\":29,\"serverGrowth\":74,\"serversOnNetwork\":[\"95.5.5.2\",\"90.0.4.0\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"15.0.1.4\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"15.0.1.4\",\"hostname\":\"vitalife\",\"organizationName\":\"VitaLife\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":16,\"ramUsed\":15.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"15.0.1.4\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"15.0.1.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"15.0.1.4\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"15.0.1.4\",\"module\":\"\"}},\"server\":\"15.0.1.4\",\"logs\":[\"Called grow() on zer0 0 times while offline\",\"zer0 grown by 0.000000% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=9)\",\"Available money on zer0 grown by 1.039585%. Gained 94.5000 hacking exp (t=9)\",\"Executing grow() on server zer0 in 109.152 seconds (t=9)\"],\"logUpd\":true,\"offlineRunningTime\":5.7989999999999995,\"offlineMoneyMade\":0,\"offlineExpGained\":0.01899515625,\"onlineRunningTime\":332.60999999998967,\"onlineMoneyMade\":0,\"onlineExpGained\":189,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,18,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"A-Green-Tomorrow.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-164227-Netburners.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[93,126,101,151,50,58,126,127,174,20,82,122,48,188,20,110,152,200,155,51,14,103,21,134,178,21,121,74,65,190,198,133,18,84,129,103,78],\"reward\":{\"type\":0,\"name\":\"Netburners\"}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-452312-CyberSec.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[180,86,131,187,161,152,80,131,109,55,40,81,44,170,27,106,25,58,64],\"reward\":{\"type\":0,\"name\":\"CyberSec\"}}}],\"dir\":0,\"requiredHackingSkill\":858,\"moneyAvailable\":719930577,\"moneyMax\":17998264425,\"hackDifficulty\":85,\"baseDifficulty\":85,\"minDifficulty\":28,\"serverGrowth\":71,\"serversOnNetwork\":[\"58.1.9.0\",\"75.1.2.5\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"73.0.1.3\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"73.0.1.3\",\"hostname\":\"icarus\",\"organizationName\":\"Icarus Microsystems\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-540453.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"12611553199\",\"reward\":{\"type\":1}}}],\"dir\":0,\"requiredHackingSkill\":915,\"moneyAvailable\":959677743,\"moneyMax\":23991943575,\"hackDifficulty\":90,\"baseDifficulty\":90,\"minDifficulty\":30,\"serverGrowth\":89,\"serversOnNetwork\":[\"7.2.0.7\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"57.2.0.7\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"57.2.0.7\",\"hostname\":\"univ-energy\",\"organizationName\":\"Universal Energy\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":128,\"ramUsed\":127.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"57.2.0.7\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"57.2.0.7\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"57.2.0.7\",\"module\":\"\"}},\"server\":\"57.2.0.7\",\"logs\":[\"Called grow() on zer0 1 times while offline\",\"zer0 grown by 13.985327% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=73)\",\"Available money on zer0 grown by 8.715753%. Gained 766.5000 hacking exp (t=73)\",\"Executing grow() on server zer0 in 111.612 seconds (t=73)\"],\"logUpd\":true,\"offlineRunningTime\":26.485,\"offlineMoneyMade\":0,\"offlineExpGained\":31.793695765584943,\"onlineRunningTime\":45090.40999990484,\"onlineMoneyMade\":0,\"onlineExpGained\":220752,\"threads\":73,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,21024,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-9017.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[166,154,180,107,85,10,12,15,44,154,146,150,39,192,196,12,80,34,187,25,144,43,81,30,45,22,3,134,195,142,54,122,118,121,189,193,147,183,21,135,180,146,2,145],\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-317969.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[140,154,198,20,43,26,114,199,86,31,144,28,140,52,65,181,186,91,114,74,167,44,73,113,56,144,177,128,193,99,107,71,146,200,124,30,110,190,55,2,20,114,189,124,87,200,137,10,197],\"reward\":{\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-488529-Netburners.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[6,1,-6,-6,10,-8,1,3,-4,-10,-4,0,-8,5,8,7,-5,7,5,4,2],\"reward\":{\"type\":0,\"name\":\"Netburners\"}}}],\"dir\":0,\"requiredHackingSkill\":890,\"moneyAvailable\":1183788751,\"moneyMax\":29594718775,\"hackDifficulty\":86,\"baseDifficulty\":86,\"minDifficulty\":29,\"serverGrowth\":90,\"serversOnNetwork\":[\"82.6.6.2\"],\"numOpenPortsRequired\":4,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"47.2.0.5\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"47.2.0.5\",\"hostname\":\"titan-labs\",\"organizationName\":\"Titan Laboratories\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":32,\"ramUsed\":31.5,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"47.2.0.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"47.2.0.5\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"47.2.0.5\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"47.2.0.5\",\"module\":\"\"}},\"server\":\"47.2.0.5\",\"logs\":[\"Called weaken() on zer0 0 times while offline\",\"Executing weaken() on server zer0 in 117.285 seconds (t=18)\",\"Server security level on zer0 weakened to 8. Gained 189.0000 hacking exp (t=18)\",\"Executing weaken() on server zer0 in 110.803 seconds (t=18)\"],\"logUpd\":true,\"offlineRunningTime\":5.8,\"offlineMoneyMade\":0,\"offlineExpGained\":0.911925,\"onlineRunningTime\":3681.209999998843,\"onlineMoneyMade\":0,\"onlineExpGained\":4725,\"threads\":18,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,0,450],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"coded-intelligence.lit\"],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":873,\"moneyAvailable\":822070407,\"moneyMax\":20551760175,\"hackDifficulty\":79,\"baseDifficulty\":79,\"minDifficulty\":26,\"serverGrowth\":64,\"serversOnNetwork\":[\"39.5.4.9\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"29.8.0.1\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"29.8.0.1\",\"hostname\":\"microdyne\",\"organizationName\":\"Microdyne Technologies\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":32,\"ramUsed\":31.5,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"29.8.0.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"29.8.0.1\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"29.8.0.1\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"29.8.0.1\",\"module\":\"\"}},\"server\":\"29.8.0.1\",\"logs\":[\"Called weaken() on zer0 0 times while offline\",\"Executing weaken() on server zer0 in 117.285 seconds (t=18)\",\"Server security level on zer0 weakened to 8. Gained 189.0000 hacking exp (t=18)\",\"Executing weaken() on server zer0 in 110.803 seconds (t=18)\"],\"logUpd\":true,\"offlineRunningTime\":5.8,\"offlineMoneyMade\":0,\"offlineExpGained\":0.9119249999999999,\"onlineRunningTime\":3723.209999998805,\"onlineMoneyMade\":0,\"onlineExpGained\":4725,\"threads\":18,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,0,450],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"synthetic-muscles.lit\"],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":816,\"moneyAvailable\":585485113,\"moneyMax\":14637127825,\"hackDifficulty\":69,\"baseDifficulty\":69,\"minDifficulty\":23,\"serverGrowth\":76,\"serversOnNetwork\":[\"55.7.0.6\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"39.5.4.9\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"39.5.4.9\",\"hostname\":\"taiyang-digital\",\"organizationName\":\"Taiyang Digital\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-819133-AlphaEnterprises.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[37],[6],[14],[26]],\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}}],\"dir\":0,\"requiredHackingSkill\":934,\"moneyAvailable\":825361419,\"moneyMax\":20634035475,\"hackDifficulty\":74,\"baseDifficulty\":74,\"minDifficulty\":25,\"serverGrowth\":76,\"serversOnNetwork\":[\"3.6.7.1\",\"47.2.0.5\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"83.5.6.1\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"83.5.6.1\",\"hostname\":\"galactic-cyber\",\"organizationName\":\"Galactic Cybersystems\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-235191-AlphaEnterprises.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[26,14,2,5],[12,47,20,20]],\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-464779-AlphaEnterprises.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[15,22],[12,14],[17,25],[4,9],[18,28]],\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}}],\"dir\":0,\"requiredHackingSkill\":837,\"moneyAvailable\":841315579,\"moneyMax\":21032889475,\"hackDifficulty\":56,\"baseDifficulty\":56,\"minDifficulty\":19,\"serverGrowth\":79,\"serversOnNetwork\":[\"52.2.8.1\",\"82.6.6.2\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"37.2.8.9\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"37.2.8.9\",\"hostname\":\"aerocorp\",\"organizationName\":\"AeroCorp\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[\"man-and-machine.lit\"],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":913,\"moneyAvailable\":1042948394,\"moneyMax\":26073709850,\"hackDifficulty\":80,\"baseDifficulty\":80,\"minDifficulty\":27,\"serverGrowth\":64,\"serversOnNetwork\":[\"52.2.8.1\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"35.5.5.8\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"35.5.5.8\",\"hostname\":\"omnia\",\"organizationName\":\"Omnia Cybersystems\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":64,\"ramUsed\":63,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-enrol.script\",\"code\":\"var target = args[0];\\n\\nbrutessh(target);\\nftpcrack(target);\\nrelaysmtp(target);\\nhttpworm(target);\\nsqlinject(target);\\nnuke(target);\",\"ramUsage\":1.9,\"server\":\"35.5.5.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"35.5.5.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"35.5.5.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"35.5.5.8\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"35.5.5.8\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"35.5.5.8\",\"module\":\"\"}},\"server\":\"35.5.5.8\",\"logs\":[\"Called grow() on zer0 1 times while offline\",\"zer0 grown by 13.985327% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=36)\",\"Available money on zer0 grown by 4.089314%. Gained 378.0000 hacking exp (t=36)\",\"Executing grow() on server zer0 in 112.842 seconds (t=36)\"],\"logUpd\":true,\"offlineRunningTime\":5.8,\"offlineMoneyMade\":0,\"offlineExpGained\":5.775525,\"onlineRunningTime\":11393.610000006389,\"onlineMoneyMade\":0,\"onlineExpGained\":29106,\"threads\":36,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,2772,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"history-of-synthoids.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-391625.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,3,2,9],\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-582766-CyberSec.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"2121348182\",\"reward\":{\"type\":0,\"name\":\"CyberSec\"}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-31428-AlphaEnterprises.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[41,45,1,7,37],[3,13,36,13,36],[16,43,10,40,22],[23,48,48,31,33],[27,40,1,19,12],[1,20,13,2,3],[32,38,33,8,1],[44,45,2,23,9]],\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}}],\"dir\":0,\"requiredHackingSkill\":882,\"moneyAvailable\":945947782,\"moneyMax\":23648694550,\"hackDifficulty\":91,\"baseDifficulty\":91,\"minDifficulty\":30,\"serverGrowth\":67,\"serversOnNetwork\":[\"43.5.7.1\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"71.2.9.1\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"71.2.9.1\",\"hostname\":\"zb-def\",\"organizationName\":\"ZB Defense Industries\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[\"synthetic-muscles.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-798627-AlphaEnterprises.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[173,67,137,34,76,83,79],\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}}],\"dir\":0,\"requiredHackingSkill\":809,\"moneyAvailable\":1059642736,\"moneyMax\":26491068400,\"hackDifficulty\":55,\"baseDifficulty\":55,\"minDifficulty\":18,\"serverGrowth\":70,\"serversOnNetwork\":[\"3.6.7.1\",\"95.5.5.2\",\"58.1.9.0\"],\"numOpenPortsRequired\":4,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"95.5.5.2\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"95.5.5.2\",\"hostname\":\"applied-energetics\",\"organizationName\":\"Applied Energetics\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":775,\"moneyAvailable\":800697194,\"moneyMax\":20017429850,\"hackDifficulty\":79,\"baseDifficulty\":79,\"minDifficulty\":26,\"serverGrowth\":70,\"serversOnNetwork\":[\"71.2.9.1\",\"55.4.4.3\",\"1.3.5.4\"],\"numOpenPortsRequired\":4,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"72.5.6.0\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"72.5.6.0\",\"hostname\":\"solaris\",\"organizationName\":\"Solaris Space Systems\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":16,\"ramUsed\":15.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"72.5.6.0\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"72.5.6.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"72.5.6.0\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"72.5.6.0\",\"module\":\"\"}},\"server\":\"72.5.6.0\",\"logs\":[\"Called grow() on zer0 0 times while offline\",\"zer0 grown by 0.000000% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=9)\",\"Available money on zer0 grown by 0.993307%. Gained 94.5000 hacking exp (t=9)\",\"Executing grow() on server zer0 in 113.175 seconds (t=9)\"],\"logUpd\":true,\"offlineRunningTime\":5.8,\"offlineMoneyMade\":0,\"offlineExpGained\":0.0189984375,\"onlineRunningTime\":290.40999999999207,\"onlineMoneyMade\":0,\"onlineExpGained\":189,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,18,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-575861-FoodNStuff.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[0,6,-4,5,2,9,-10,-4,8,2,5,-6,5,6,-8,-6,-5,9,-3,5,-9,9,8,-5,-2,4,4,-6,-1,-10,-6,8,9,3,7,-10,6,8,9,9],\"reward\":{\"type\":2,\"name\":\"FoodNStuff\"}}}],\"dir\":0,\"requiredHackingSkill\":776,\"moneyAvailable\":747107621,\"moneyMax\":18677690525,\"hackDifficulty\":77,\"baseDifficulty\":77,\"minDifficulty\":26,\"serverGrowth\":77,\"serversOnNetwork\":[\"82.6.6.2\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"82.6.6.2\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"82.6.6.2\",\"hostname\":\"deltaone\",\"organizationName\":\"Delta One\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-120223.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[171],\"reward\":{\"type\":3}}}],\"dir\":0,\"requiredHackingSkill\":869,\"moneyAvailable\":1509746020,\"moneyMax\":37743650500,\"hackDifficulty\":80,\"baseDifficulty\":80,\"minDifficulty\":27,\"serverGrowth\":56,\"serversOnNetwork\":[\"83.5.6.1\",\"3.6.7.1\",\"57.2.0.7\",\"72.5.6.0\",\"27.0.2.0\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"83.9.1.5\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"83.9.1.5\",\"hostname\":\"global-pharm\",\"organizationName\":\"Global Pharmaceuticals\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":64,\"ramUsed\":63,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"83.9.1.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-enrol.script\",\"code\":\"var target = args[0];\\n\\nbrutessh(target);\\nftpcrack(target);\\nrelaysmtp(target);\\nhttpworm(target);\\nsqlinject(target);\\nnuke(target);\",\"ramUsage\":1.9,\"server\":\"83.9.1.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"83.9.1.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"83.9.1.5\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"83.9.1.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"83.9.1.5\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"83.9.1.5\",\"module\":\"\"}},\"server\":\"83.9.1.5\",\"logs\":[\"Executing grow() on server zer0 in 93.828 seconds (t=36)\",\"Available money on zer0 grown by 4.017820%. Gained 378.0000 hacking exp (t=36)\",\"Executing grow() on server zer0 in 114.371 seconds (t=36)\"],\"logUpd\":true,\"offlineRunningTime\":5.8,\"offlineMoneyMade\":0,\"offlineExpGained\":0,\"onlineRunningTime\":248.40999999999443,\"onlineMoneyMade\":0,\"onlineExpGained\":378,\"threads\":36,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,36,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"A-Green-Tomorrow.lit\"],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":782,\"moneyAvailable\":1715635736,\"moneyMax\":42890893400,\"hackDifficulty\":85,\"baseDifficulty\":85,\"minDifficulty\":28,\"serverGrowth\":84,\"serversOnNetwork\":[\"52.2.8.1\"],\"numOpenPortsRequired\":4,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"2.4.9.0\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"2.4.9.0\",\"hostname\":\"nova-med\",\"organizationName\":\"Nova Medical\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-818077.cct\",\"type\":\"Total Ways to Sum\",\"data\":23,\"reward\":{\"type\":3}}}],\"dir\":0,\"requiredHackingSkill\":794,\"moneyAvailable\":1125501813,\"moneyMax\":28137545325,\"hackDifficulty\":74,\"baseDifficulty\":74,\"minDifficulty\":25,\"serverGrowth\":80,\"serversOnNetwork\":[\"27.0.2.0\"],\"numOpenPortsRequired\":4,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"27.0.2.0\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"27.0.2.0\",\"hostname\":\"zeus-med\",\"organizationName\":\"Zeus Medical\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-652407-CyberSec.cct\",\"type\":\"Total Ways to Sum\",\"data\":8,\"reward\":{\"type\":0,\"name\":\"CyberSec\"}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-574515.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[10,193,67,115,141,70,31,180,153,185,90],\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-363660.cct\",\"type\":\"Array Jumping Game\",\"data\":[7,1,9,2,7,4,6,6,5,7,0,6,10,4],\"reward\":{\"type\":1}}}],\"dir\":0,\"requiredHackingSkill\":837,\"moneyAvailable\":1384399972,\"moneyMax\":34609999300,\"hackDifficulty\":87,\"baseDifficulty\":87,\"minDifficulty\":29,\"serverGrowth\":79,\"serversOnNetwork\":[\"82.6.6.2\",\"2.4.9.0\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"7.2.0.7\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"7.2.0.7\",\"hostname\":\"unitalife\",\"organizationName\":\"UnitaLife Group\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":32,\"ramUsed\":31.5,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-enrol.script\",\"code\":\"var target = args[0];\\n\\nbrutessh(target);\\nftpcrack(target);\\nrelaysmtp(target);\\nhttpworm(target);\\nsqlinject(target);\\nnuke(target);\",\"ramUsage\":1.9,\"server\":\"7.2.0.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"7.2.0.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"7.2.0.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"7.2.0.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"7.2.0.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"7.2.0.7\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"7.2.0.7\",\"module\":\"\"}},\"server\":\"7.2.0.7\",\"logs\":[\"Called weaken() on zer0 0 times while offline\",\"Executing weaken() on server zer0 in 117.285 seconds (t=18)\",\"Server security level on zer0 weakened to 8. Gained 189.0000 hacking exp (t=18)\",\"Executing weaken() on server zer0 in 110.803 seconds (t=18)\"],\"logUpd\":true,\"offlineRunningTime\":5.801,\"offlineMoneyMade\":0,\"offlineExpGained\":0.8740790625000002,\"onlineRunningTime\":3171.009999999307,\"onlineMoneyMade\":0,\"onlineExpGained\":4536,\"threads\":18,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,0,432],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":820,\"moneyAvailable\":1003620523,\"moneyMax\":25090513075,\"hackDifficulty\":79,\"baseDifficulty\":79,\"minDifficulty\":26,\"serverGrowth\":73,\"serversOnNetwork\":[\"43.5.7.1\",\"73.0.1.3\"],\"numOpenPortsRequired\":4,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"35.5.9.3\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"35.5.9.3\",\"hostname\":\"lexo-corp\",\"organizationName\":\"Lexo Corporation\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":128,\"ramUsed\":127.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"35.5.9.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-enrol.script\",\"code\":\"var target = args[0];\\n\\nbrutessh(target);\\nftpcrack(target);\\nrelaysmtp(target);\\nhttpworm(target);\\nsqlinject(target);\\nnuke(target);\",\"ramUsage\":1.9,\"server\":\"35.5.9.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"35.5.9.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"35.5.9.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"35.5.9.3\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"35.5.9.3\",\"module\":\"\"}},\"server\":\"35.5.9.3\",\"logs\":[\"Called grow() on zer0 1 times while offline\",\"zer0 grown by 13.985327% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=73)\",\"Available money on zer0 grown by 8.203445%. Gained 766.5000 hacking exp (t=73)\",\"Executing grow() on server zer0 in 116.798 seconds (t=73)\"],\"logUpd\":true,\"offlineRunningTime\":30.588,\"offlineMoneyMade\":0,\"offlineExpGained\":49.90152259685649,\"onlineRunningTime\":51354.20999981359,\"onlineMoneyMade\":0,\"onlineExpGained\":244513.5,\"threads\":73,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,23287,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-945899.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[183,96,112,122,63,6,13,33,20,180,58,110,155,101,42,180,29,131,17,44,67,134,31,111,76,158,187],\"reward\":{\"type\":3}}}],\"dir\":0,\"requiredHackingSkill\":660,\"moneyAvailable\":725956946,\"moneyMax\":18148923650,\"hackDifficulty\":64,\"baseDifficulty\":64,\"minDifficulty\":21,\"serverGrowth\":59,\"serversOnNetwork\":[\"69.2.3.5\",\"43.5.7.1\"],\"numOpenPortsRequired\":4,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"36.2.7.8\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"36.2.7.8\",\"hostname\":\"rho-construction\",\"organizationName\":\"Rho Construction\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":16,\"ramUsed\":15.3,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"36.2.7.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"36.2.7.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-enrol.script\",\"code\":\"var target = args[0];\\n\\nbrutessh(target);\\nftpcrack(target);\\nrelaysmtp(target);\\nhttpworm(target);\\nsqlinject(target);\\nnuke(target);\",\"ramUsage\":1.9,\"server\":\"36.2.7.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"36.2.7.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"36.2.7.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"36.2.7.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"36.2.7.8\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"36.2.7.8\",\"module\":\"\"}},\"server\":\"36.2.7.8\",\"logs\":[\"dh-worker-hack.js generated $6138.034723437499 while offline by hacking zer0\",\"Hacked zer0 1 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=9)\",\"Script FAILED to hack zer0. Gained 23.6250 exp (t=9)\",\"Attempting to hack zer0 in 29.321 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $719,892.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 29.913 seconds (t=9)\",\"Script FAILED to hack zer0. Gained 23.6250 exp (t=9)\",\"Attempting to hack zer0 in 30.303 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $1,497,654.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 27.748 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $1,170,801.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 28.179 seconds (t=9)\",\"Script killed\"],\"logUpd\":true,\"offlineRunningTime\":5.801,\"offlineMoneyMade\":6138.034723437499,\"offlineExpGained\":0.228020625,\"onlineRunningTime\":644.6100000000097,\"onlineMoneyMade\":33914232,\"onlineExpGained\":1464.75,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[33914232,126,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":477,\"moneyAvailable\":649090012,\"moneyMax\":16227250300,\"hackDifficulty\":40,\"baseDifficulty\":40,\"minDifficulty\":13,\"serverGrowth\":52,\"serversOnNetwork\":[\"96.3.2.7\"],\"numOpenPortsRequired\":3,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"52.2.8.1\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"52.2.8.1\",\"hostname\":\"alpha-ent\",\"organizationName\":\"Alpha Enterprises\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":16,\"ramUsed\":15.3,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"52.2.8.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-enrol.script\",\"code\":\"var target = args[0];\\n\\nbrutessh(target);\\nftpcrack(target);\\nrelaysmtp(target);\\nhttpworm(target);\\nsqlinject(target);\\nnuke(target);\",\"ramUsage\":1.9,\"server\":\"52.2.8.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"52.2.8.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"52.2.8.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"52.2.8.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"52.2.8.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"52.2.8.1\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"52.2.8.1\",\"module\":\"\"}},\"server\":\"52.2.8.1\",\"logs\":[\"dh-worker-hack.js generated $3326.5965174999997 while offline by hacking zer0\",\"Hacked zer0 1 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $980,955.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 29.368 seconds (t=9)\",\"Script FAILED to hack zer0. Gained 23.6250 exp (t=9)\",\"Attempting to hack zer0 in 29.913 seconds (t=9)\",\"Script FAILED to hack zer0. Gained 23.6250 exp (t=9)\",\"Attempting to hack zer0 in 30.303 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $1,457,991.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 27.794 seconds (t=9)\",\"Script FAILED to hack zer0. Gained 23.6250 exp (t=9)\",\"Attempting to hack zer0 in 28.179 seconds (t=9)\"],\"logUpd\":true,\"offlineRunningTime\":5.801,\"offlineMoneyMade\":3326.5965174999997,\"offlineExpGained\":0.1662650390625,\"onlineRunningTime\":530.6099999999838,\"onlineMoneyMade\":18982890,\"onlineExpGained\":1086.75,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[18982890,90,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"sector-12-crime.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-710549.cct\",\"type\":\"Total Ways to Sum\",\"data\":66,\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-124188.cct\",\"type\":\"Total Ways to Sum\",\"data\":46,\"reward\":{\"type\":1}}}],\"dir\":0,\"requiredHackingSkill\":511,\"moneyAvailable\":717902351,\"moneyMax\":17947558775,\"hackDifficulty\":65,\"baseDifficulty\":65,\"minDifficulty\":22,\"serverGrowth\":57,\"serversOnNetwork\":[\"11.1.2.9\",\"83.5.6.1\",\"37.2.8.9\",\"83.9.1.5\"],\"numOpenPortsRequired\":4,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"84.3.6.9\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"84.3.6.9\",\"hostname\":\"aevum-police\",\"organizationName\":\"Aevum Police Network\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":64,\"ramUsed\":63,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"84.3.6.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-enrol.script\",\"code\":\"var target = args[0];\\n\\nbrutessh(target);\\nftpcrack(target);\\nrelaysmtp(target);\\nhttpworm(target);\\nsqlinject(target);\\nnuke(target);\",\"ramUsage\":1.9,\"server\":\"84.3.6.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"84.3.6.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"84.3.6.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"84.3.6.9\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"84.3.6.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"84.3.6.9\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"84.3.6.9\",\"module\":\"\"}},\"server\":\"84.3.6.9\",\"logs\":[\"Called grow() on zer0 1 times while offline\",\"zer0 grown by 13.984396% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=36)\",\"Available money on zer0 grown by 3.861260%. Gained 378.0000 hacking exp (t=36)\",\"Executing grow() on server zer0 in 118.028 seconds (t=36)\"],\"logUpd\":true,\"offlineRunningTime\":5.802,\"offlineMoneyMade\":0,\"offlineExpGained\":0.98826,\"onlineRunningTime\":1610.8100000002294,\"onlineMoneyMade\":0,\"onlineExpGained\":5292,\"threads\":36,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,504,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-430878.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[25,13,14,48,4],[10,38,26,42,25],[16,42,20,14,6],[31,17,2,44,4],[33,29,17,2,50],[4,11,16,38,39],[44,30,43,24,31]],\"reward\":{\"type\":1}}}],\"dir\":0,\"requiredHackingSkill\":432,\"moneyAvailable\":276365181,\"moneyMax\":6909129525,\"hackDifficulty\":77,\"baseDifficulty\":77,\"minDifficulty\":26,\"serverGrowth\":43,\"serversOnNetwork\":[\"11.1.2.9\"],\"numOpenPortsRequired\":4,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"69.2.3.5\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"69.2.3.5\",\"hostname\":\"rothman-uni\",\"organizationName\":\"Rothman University Network\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":64,\"ramUsed\":63,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"69.2.3.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"69.2.3.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"69.2.3.5\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"69.2.3.5\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"69.2.3.5\",\"module\":\"\"}},\"server\":\"69.2.3.5\",\"logs\":[\"Called grow() on zer0 1 times while offline\",\"zer0 grown by 13.977880% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=36)\",\"Available money on zer0 grown by 3.810853%. Gained 378.0000 hacking exp (t=36)\",\"Executing grow() on server zer0 in 119.224 seconds (t=36)\"],\"logUpd\":true,\"offlineRunningTime\":5.802,\"offlineMoneyMade\":0,\"offlineExpGained\":6.38568,\"onlineRunningTime\":12395.610000010034,\"onlineMoneyMade\":0,\"onlineExpGained\":32130,\"threads\":36,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,3060,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-447158.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"163109127\",\"reward\":{\"type\":3}}}],\"dir\":0,\"requiredHackingSkill\":420,\"moneyAvailable\":214115230,\"moneyMax\":5352880750,\"hackDifficulty\":50,\"baseDifficulty\":50,\"minDifficulty\":17,\"serverGrowth\":44,\"serversOnNetwork\":[\"11.7.0.4\",\"35.5.9.3\",\"19.0.4.5\"],\"numOpenPortsRequired\":3,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":3}},\"11.1.2.9\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"11.1.2.9\",\"hostname\":\"zb-institute\",\"organizationName\":\"ZB Institute of Technology Network\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":16,\"ramUsed\":15.3,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"11.1.2.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"11.1.2.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-enrol.script\",\"code\":\"var target = args[0];\\n\\nbrutessh(target);\\nftpcrack(target);\\nrelaysmtp(target);\\nhttpworm(target);\\nsqlinject(target);\\nnuke(target);\",\"ramUsage\":1.9,\"server\":\"11.1.2.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"11.1.2.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"11.1.2.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"11.1.2.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"11.1.2.9\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"11.1.2.9\",\"module\":\"\"}},\"server\":\"11.1.2.9\",\"logs\":[\"dh-worker-hack.js generated $2572.76839 while offline by hacking zer0\",\"Hacked zer0 1 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $955,152.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 29.415 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $700,992.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 29.960 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $562,248.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 30.350 seconds (t=9)\",\"Script FAILED to hack zer0. Gained 23.6250 exp (t=9)\",\"Attempting to hack zer0 in 27.794 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $1,139,850.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 28.225 seconds (t=9)\"],\"logUpd\":true,\"offlineRunningTime\":5.802,\"offlineMoneyMade\":2572.76839,\"offlineExpGained\":0.15203999999999998,\"onlineRunningTime\":524.6099999999824,\"onlineMoneyMade\":16151013,\"onlineExpGained\":1157.625,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[16151013,99,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-264200.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[28,41,4,22,6,15],[32,8,29,8,48,12],[33,24,35,31,17,48]],\"reward\":{\"type\":1}}}],\"dir\":0,\"requiredHackingSkill\":735,\"moneyAvailable\":1021532514,\"moneyMax\":25538312850,\"hackDifficulty\":78,\"baseDifficulty\":78,\"minDifficulty\":26,\"serverGrowth\":80,\"serversOnNetwork\":[\"56.5.8.2\",\"52.2.8.1\",\"84.3.6.9\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"96.3.2.7\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"96.3.2.7\",\"hostname\":\"summit-uni\",\"organizationName\":\"Summit University Network\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":64,\"ramUsed\":63,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"96.3.2.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"96.3.2.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"96.3.2.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"96.3.2.7\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"96.3.2.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"96.3.2.7\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"96.3.2.7\",\"module\":\"\"}},\"server\":\"96.3.2.7\",\"logs\":[\"Called grow() on zer0 1 times while offline\",\"zer0 grown by 13.968118% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=36)\",\"Available money on zer0 grown by 3.763056%. Gained 378.0000 hacking exp (t=36)\",\"Executing grow() on server zer0 in 120.454 seconds (t=36)\"],\"logUpd\":true,\"offlineRunningTime\":5.802,\"offlineMoneyMade\":0,\"offlineExpGained\":0.07601999999999999,\"onlineRunningTime\":326.60999999999,\"onlineMoneyMade\":0,\"onlineExpGained\":756,\"threads\":36,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,72,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-676828.cct\",\"type\":\"Array Jumping Game\",\"data\":[7,4,3,10,0,0,0,0,9,0,0],\"reward\":{\"type\":3}}}],\"dir\":0,\"requiredHackingSkill\":445,\"moneyAvailable\":295569904,\"moneyMax\":7389247600,\"hackDifficulty\":51,\"baseDifficulty\":51,\"minDifficulty\":17,\"serverGrowth\":42,\"serversOnNetwork\":[\"49.2.3.6\",\"36.2.7.8\"],\"numOpenPortsRequired\":3,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":3}},\"34.8.6.6\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"34.8.6.6\",\"hostname\":\"syscore\",\"organizationName\":\"SysCore Securities\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":642,\"moneyAvailable\":420299395,\"moneyMax\":10507484875,\"hackDifficulty\":79,\"baseDifficulty\":79,\"minDifficulty\":26,\"serverGrowth\":62,\"serversOnNetwork\":[\"49.2.3.6\"],\"numOpenPortsRequired\":4,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"8.0.1.0\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"8.0.1.0\",\"hostname\":\"catalyst\",\"organizationName\":\"Catalyst Ventures\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":32,\"ramUsed\":31.5,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"8.0.1.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"8.0.1.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"8.0.1.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"8.0.1.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"8.0.1.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"8.0.1.0\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"8.0.1.0\",\"module\":\"\"}},\"server\":\"8.0.1.0\",\"logs\":[\"Called weaken() on zer0 0 times while offline\",\"Executing weaken() on server zer0 in 117.285 seconds (t=18)\",\"Server security level on zer0 weakened to 8. Gained 189.0000 hacking exp (t=18)\",\"Executing weaken() on server zer0 in 110.803 seconds (t=18)\"],\"logUpd\":true,\"offlineRunningTime\":5.802,\"offlineMoneyMade\":0,\"offlineExpGained\":0.83622,\"onlineRunningTime\":2961.009999999498,\"onlineMoneyMade\":0,\"onlineExpGained\":4347,\"threads\":18,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,0,414],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"tensions-in-tech-race.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-597404.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-6,1,-8,-6,8,7,0,-8,5,-5,10,-8,8,8,-2,0,3,9,-4,-8,-5,-9,5,5,5,9,5,9,10,2],\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-819389.cct\",\"type\":\"Array Jumping Game\",\"data\":[5],\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-512642-AlphaEnterprises.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[3,96,96,1,194,174,170,2,38,91,191,193,15,11,20,162,135,86,84,181,50,61,55,25,23,138,16,103,62,75,9,189,21,98,127,182,47,83,152,93,74,100],\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}}],\"dir\":0,\"requiredHackingSkill\":410,\"moneyAvailable\":478753950,\"moneyMax\":11968848750,\"hackDifficulty\":70,\"baseDifficulty\":70,\"minDifficulty\":23,\"serverGrowth\":36,\"serversOnNetwork\":[\"11.7.0.4\"],\"numOpenPortsRequired\":3,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":3}},\"49.2.3.6\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"49.2.3.6\",\"hostname\":\"the-hub\",\"organizationName\":\"The Hub\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":8,\"ramUsed\":6.8,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"49.2.3.6\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"49.2.3.6\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"49.2.3.6\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"49.2.3.6\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"49.2.3.6\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"49.2.3.6\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"49.2.3.6\",\"module\":\"\"}},\"server\":\"49.2.3.6\",\"logs\":[\"dh-worker-hack.js generated $3606.8481195833338 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=4)\",\"Script FAILED to hack zer0. Gained 10.5000 exp (t=4)\",\"Attempting to hack zer0 in 29.415 seconds (t=4)\",\"Script SUCCESSFULLY hacked zer0 for $303,380.00 and 42.0000 exp (t=4)\",\"Attempting to hack zer0 in 29.981 seconds (t=4)\",\"Script SUCCESSFULLY hacked zer0 for $243,344.00 and 42.0000 exp (t=4)\",\"Attempting to hack zer0 in 30.370 seconds (t=4)\",\"Script SUCCESSFULLY hacked zer0 for $630,840.00 and 42.0000 exp (t=4)\",\"Attempting to hack zer0 in 27.815 seconds (t=4)\",\"Script SUCCESSFULLY hacked zer0 for $493,208.00 and 42.0000 exp (t=4)\",\"Attempting to hack zer0 in 28.246 seconds (t=4)\"],\"logUpd\":true,\"offlineRunningTime\":5.803,\"offlineMoneyMade\":3606.8481195833338,\"offlineExpGained\":0.11616171875,\"onlineRunningTime\":680.6100000000179,\"onlineMoneyMade\":19602280,\"onlineExpGained\":756,\"threads\":4,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[19602280,68,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":278,\"moneyAvailable\":184441199,\"moneyMax\":4611029975,\"hackDifficulty\":43,\"baseDifficulty\":43,\"minDifficulty\":14,\"serverGrowth\":46,\"serversOnNetwork\":[\"20.0.5.8\",\"96.3.2.7\",\"34.8.6.6\"],\"numOpenPortsRequired\":2,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":2}},\"56.5.8.2\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"56.5.8.2\",\"hostname\":\"comptek\",\"organizationName\":\"CompuTek\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"56.5.8.2\",\"module\":\"\"}}],\"runningScripts\":[],\"programs\":[],\"messages\":[\"man-and-machine.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-426064-AlphaEnterprises.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[3,-10,-2,-6,5,-9,10,-1,9,7,5,6,4,-4,5,0,-8,-4,-6,-6,-7,8,3,-10,0,0,-6,7,9,6,-7,0,2,10,7,7,-2,3],\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}}],\"dir\":0,\"requiredHackingSkill\":350,\"moneyAvailable\":229836330,\"moneyMax\":5745908250,\"hackDifficulty\":59,\"baseDifficulty\":59,\"minDifficulty\":20,\"serverGrowth\":62,\"serversOnNetwork\":[\"20.0.5.8\",\"11.1.2.9\"],\"numOpenPortsRequired\":3,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":3}},\"11.7.0.4\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"11.7.0.4\",\"hostname\":\"netlink\",\"organizationName\":\"Netlink Technologies\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":16,\"ramUsed\":15.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"11.7.0.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"11.7.0.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"11.7.0.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"11.7.0.4\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"11.7.0.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"11.7.0.4\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"11.7.0.4\",\"module\":{}}},\"server\":\"11.7.0.4\",\"logs\":[\"Executing grow() on server zer0 in 93.828 seconds (t=9)\",\"Available money on zer0 grown by 0.823120%. Gained 94.5000 hacking exp (t=9)\",\"Executing grow() on server zer0 in 131.856 seconds (t=9)\"],\"logUpd\":true,\"offlineRunningTime\":0.01,\"offlineMoneyMade\":0,\"offlineExpGained\":0,\"onlineRunningTime\":162.40999999999931,\"onlineMoneyMade\":0,\"onlineExpGained\":94.5,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,9,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0]}}}}],\"programs\":[],\"messages\":[\"simulated-reality.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-617925.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":259925510,\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-844495-AlphaEnterprises.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[25,109,115,181,136,167,36,46,89,118,20,166,71,100,45,159,79,20,3,76,109,183,44,192,11,113,133,157,17,47,15,46,70,50,123,92,102,64,193,197,21,56,187,118],\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}}],\"dir\":0,\"requiredHackingSkill\":389,\"moneyAvailable\":275000000,\"moneyMax\":6875000000,\"hackDifficulty\":66,\"baseDifficulty\":66,\"minDifficulty\":22,\"serverGrowth\":55,\"serversOnNetwork\":[\"56.9.5.0\",\"69.2.3.5\",\"8.0.1.0\"],\"numOpenPortsRequired\":3,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":3}},\"78.7.5.3\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"78.7.5.3\",\"hostname\":\"johnson-ortho\",\"organizationName\":\"Johnson Orthopedics\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"78.7.5.3\",\"module\":\"\"}}],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":256,\"moneyAvailable\":75765169,\"moneyMax\":1894129225,\"hackDifficulty\":63,\"baseDifficulty\":63,\"minDifficulty\":21,\"serverGrowth\":53,\"serversOnNetwork\":[\"7.2.8.7\"],\"numOpenPortsRequired\":2,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":2}},\"23.0.9.7\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"23.0.9.7\",\"hostname\":\"foodnstuff\",\"organizationName\":\"Food N Stuff Supermarket\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":16,\"ramUsed\":15.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-lib.script\",\"code\":\"function getRoots() {\\n    return ['foodnstuff', 'harakiri-sushi', 'hong-fang-tea', 'iron-gym', 'joesguns', 'max-hardware', 'nectar-net', 'neo-net', 'sigma-cosmetics', 'zer0'];\\n}\\n\\nfunction err(msg) {\\n    tprint('Fatal error: ' + msg);\\n    exit();\\n}\\n\\nfunction secLoop(target, count, f) {\\n    var i = 0;\\n    var baseSec = getServerBaseSecurityLevel(target);\\n    \\n    while (i < count) {\\n        if (getServerSecurityLevel(target) > baseSec) {\\n            weaken(target);\\n        } else {\\n            f();\\n            i++;\\n        }\\n    }    \\n}\\n\\nfunction dispatch(target) {\\n    exec('bs-dispatch.script', 'home', 1, target);\\n}\",\"ramUsage\":3.25,\"server\":\"23.0.9.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-grow.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { grow(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.4,\"server\":\"23.0.9.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"23.0.9.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"23.0.9.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"23.0.9.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"buy-nodes.script\",\"code\":\"var purchased = true;\\nvar cash = getServerMoneyAvailable(\\\"home\\\");\\n\\ntprint('loading costs');\\nvar costs = [];\\nfor (var i = 0; i < hacknet.numNodes(); i++) {\\n    costs.push(hacknet.getLevelUpgradeCost(i, 1));\\n    costs.push(hacknet.getRamUpgradeCost(i, 1));\\n    costs.push(hacknet.getCoreUpgradeCost(i, 1));\\n}\\nvar buyNodeCost = hacknet.getPurchaseNodeCost();\\nvar numNodes = hacknet.numNodes();\\n\\ntprint('begin purchase loop');\\nwhile (purchased) {\\n    purchased = false;\\n\\n    var minCost = Math.min.apply(null, costs);\\n    var minIdx = costs.indexOf(minCost);\\n    \\n    if (buyNodeCost < minCost) {\\n        if (buyNodeCost <= cash) {\\n            var newIdx = numNodes;\\n            \\n            print('buy node[newIdx] - $' + buyNodeCost);\\n            hacknet.purchaseNode();\\n            buyNodeCost = hacknet.getPurchaseNodeCost();\\n            \\n            costs.push(hacknet.getLevelUpgradeCost(newIdx, 1));\\n            costs.push(hacknet.getRamUpgradeCost(newIdx, 1));\\n            costs.push(hacknet.getCoreUpgradeCost(newIdx, 1));\\n            \\n            numNodes = numNodes + 1;\\n            cash = cash - minCost;\\n            purchased = true;\\n        }\\n    } else if (minCost <= cash) {\\n        var nodeIdx = Math.floor(minIdx / 3) % numNodes;\\n        var itemIdx = minIdx - (nodeIdx * 3);\\n        \\n        var cost = minCost;\\n        var count = 1;\\n        \\n        while (cost * 3 < cash) {\\n            count = count + 1;\\n            cost = cost * 3;\\n        }\\n        \\n        if (itemIdx == 0) {\\n            print('buy ' + count + 'x level[' + nodeIdx + ']');\\n            hacknet.upgradeLevel(nodeIdx, count);\\n            costs[minIdx] = hacknet.getLevelUpgradeCost(nodeIdx, 1);\\n        } else if (itemIdx == 1) {\\n            print('buy ' + count + 'x ram[' + nodeIdx + ']');\\n            hacknet.upgradeRam(nodeIdx, count);\\n            costs[minIdx] = hacknet.getRamUpgradeCost(nodeIdx, 1);\\n        } else if (itemIdx == 2) {\\n            print('buy ' + count + 'x core[' + nodeIdx + ']');\\n            hacknet.upgradeCore(nodeIdx, count);\\n            costs[minIdx] = hacknet.getCoreUpgradeCost(nodeIdx, 1);\\n        }\\n        \\n        if (count == 1) {\\n            cash = cash - cost;\\n            print('budget: $' + cash)\\n        } else {\\n            cash = getServerMoneyAvailable(\\\"home\\\");\\n        }\\n        \\n        purchased = true;\\n    }\\n}\\n\\ntprint('purchase loop complete');\",\"ramUsage\":5.7,\"server\":\"23.0.9.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"23.0.9.7\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"23.0.9.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"23.0.9.7\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"23.0.9.7\",\"module\":{}}},\"server\":\"23.0.9.7\",\"logs\":[\"Executing grow() on server zer0 in 96.970 seconds (t=9)\",\"Available money on zer0 grown by 1.265767%. Gained 94.5000 hacking exp (t=9)\",\"Executing grow() on server zer0 in 91.618 seconds (t=9)\"],\"logUpd\":true,\"offlineRunningTime\":0.01,\"offlineMoneyMade\":0,\"offlineExpGained\":0,\"onlineRunningTime\":114.41000000000109,\"onlineMoneyMade\":0,\"onlineExpGained\":94.5,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,9,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0]}}}}],\"programs\":[],\"messages\":[\"sector-12-crime.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-393752.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"215998113\",\"reward\":{\"type\":3}}}],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":1850883.1181374672,\"moneyMax\":50000000,\"hackDifficulty\":22.983999999999874,\"baseDifficulty\":10,\"minDifficulty\":3,\"serverGrowth\":5,\"serversOnNetwork\":[\"44.1.3.8\",\"8.8.8.8\"],\"numOpenPortsRequired\":0,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"6.1.5.8\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"6.1.5.8\",\"hostname\":\"sigma-cosmetics\",\"organizationName\":\"Sigma Cosmetics\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":16,\"ramUsed\":15.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-lib.script\",\"code\":\"function getRoots() {\\n    return ['foodnstuff', 'harakiri-sushi', 'hong-fang-tea', 'iron-gym', 'joesguns', 'max-hardware', 'nectar-net', 'neo-net', 'sigma-cosmetics', 'zer0'];\\n}\\n\\nfunction err(msg) {\\n    tprint('Fatal error: ' + msg);\\n    exit();\\n}\\n\\nfunction secLoop(target, count, f) {\\n    var i = 0;\\n    var baseSec = getServerBaseSecurityLevel(target);\\n    \\n    while (i < count) {\\n        if (getServerSecurityLevel(target) > baseSec) {\\n            weaken(target);\\n        } else {\\n            f();\\n            i++;\\n        }\\n    }    \\n}\\n\\nfunction dispatch(target) {\\n    exec('bs-dispatch.script', 'home', 1, target);\\n}\",\"ramUsage\":3.25,\"server\":\"6.1.5.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-grow.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { grow(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.4,\"server\":\"6.1.5.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"6.1.5.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"6.1.5.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"6.1.5.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"6.1.5.8\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"6.1.5.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"6.1.5.8\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"6.1.5.8\",\"module\":\"\"}},\"server\":\"6.1.5.8\",\"logs\":[\"Executing grow() on server zer0 in 93.828 seconds (t=9)\",\"Available money on zer0 grown by 0.916125%. Gained 94.5000 hacking exp (t=9)\",\"Executing grow() on server zer0 in 120.787 seconds (t=9)\"],\"logUpd\":true,\"offlineRunningTime\":5.803,\"offlineMoneyMade\":0,\"offlineExpGained\":0,\"onlineRunningTime\":212.40999999999647,\"onlineMoneyMade\":0,\"onlineExpGained\":94.5,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,9,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-864746.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[131,69],\"reward\":{\"type\":3}}}],\"dir\":0,\"requiredHackingSkill\":5,\"moneyAvailable\":190549.36584581787,\"moneyMax\":57500000,\"hackDifficulty\":9.837999999999933,\"baseDifficulty\":10,\"minDifficulty\":3,\"serverGrowth\":10,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":0,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"86.9.6.7\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"86.9.6.7\",\"hostname\":\"joesguns\",\"organizationName\":\"Joe's Guns\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":16,\"ramUsed\":15.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-lib.script\",\"code\":\"function getRoots() {\\n    return ['foodnstuff', 'harakiri-sushi', 'hong-fang-tea', 'iron-gym', 'joesguns', 'max-hardware', 'nectar-net', 'neo-net', 'sigma-cosmetics', 'zer0'];\\n}\\n\\nfunction err(msg) {\\n    tprint('Fatal error: ' + msg);\\n    exit();\\n}\\n\\nfunction secLoop(target, count, f) {\\n    var i = 0;\\n    var baseSec = getServerBaseSecurityLevel(target);\\n    \\n    while (i < count) {\\n        if (getServerSecurityLevel(target) > baseSec) {\\n            weaken(target);\\n        } else {\\n            f();\\n            i++;\\n        }\\n    }    \\n}\\n\\nfunction dispatch(target) {\\n    exec('bs-dispatch.script', 'home', 1, target);\\n}\",\"ramUsage\":3.25,\"server\":\"86.9.6.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-grow.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { grow(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.4,\"server\":\"86.9.6.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-hack.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { hack(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.35,\"server\":\"86.9.6.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"86.9.6.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"86.9.6.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"86.9.6.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"86.9.6.7\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"86.9.6.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"86.9.6.7\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"86.9.6.7\",\"module\":\"\"}},\"server\":\"86.9.6.7\",\"logs\":[\"Executing grow() on server zer0 in 93.828 seconds (t=9)\",\"Available money on zer0 grown by 0.913027%. Gained 94.5000 hacking exp (t=9)\",\"Executing grow() on server zer0 in 121.119 seconds (t=9)\"],\"logUpd\":true,\"offlineRunningTime\":5.803,\"offlineMoneyMade\":0,\"offlineExpGained\":0,\"onlineRunningTime\":170.40999999999886,\"onlineMoneyMade\":0,\"onlineExpGained\":94.5,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,9,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-850169.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[15,16],[5,11],[13,16],[10,16],[18,19],[11,12],[20,28],[16,26]],\"reward\":{\"type\":3}}}],\"dir\":0,\"requiredHackingSkill\":10,\"moneyAvailable\":4995984.447708728,\"moneyMax\":62500000,\"hackDifficulty\":14.909999999999963,\"baseDifficulty\":15,\"minDifficulty\":5,\"serverGrowth\":20,\"serversOnNetwork\":[\"44.1.3.8\",\"36.3.5.5\"],\"numOpenPortsRequired\":0,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"36.3.5.5\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"36.3.5.5\",\"hostname\":\"zer0\",\"organizationName\":\"ZER0 Nightclub\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":32,\"ramUsed\":31.5,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-lib.script\",\"code\":\"function getRoots() {\\n    return ['foodnstuff', 'harakiri-sushi', 'hong-fang-tea', 'joesguns', 'nectar-net', 'sigma-cosmetics', 'zer0'];\\n}\\n\\nfunction err(msg) {\\n    tprint('Fatal error: ' + msg);\\n    exit();\\n}\\n\\nfunction secLoop(target, count, f) {\\n    var i = 0;\\n    var baseSec = getServerBaseSecurityLevel(target);\\n    \\n    while (i < count) {\\n        if (getServerSecurityLevel(target) > baseSec) {\\n            weaken(target);\\n        } else {\\n            f();\\n            i++;\\n        }\\n    }    \\n}\\n\\nfunction dispatch(target) {\\n    exec('bs-dispatch.script', 'home', 1, target);\\n}\",\"ramUsage\":3.25,\"server\":\"36.3.5.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-grow.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { grow(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.4,\"server\":\"36.3.5.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"36.3.5.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"36.3.5.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"36.3.5.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"36.3.5.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"36.3.5.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"36.3.5.5\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"36.3.5.5\",\"module\":\"\"}},\"server\":\"36.3.5.5\",\"logs\":[\"Called weaken() on zer0 0 times while offline\",\"Executing weaken() on server zer0 in 117.285 seconds (t=18)\",\"Server security level on zer0 weakened to 8. Gained 189.0000 hacking exp (t=18)\",\"Executing weaken() on server zer0 in 110.803 seconds (t=18)\"],\"logUpd\":true,\"offlineRunningTime\":5.803,\"offlineMoneyMade\":0,\"offlineExpGained\":0.8743809375000001,\"onlineRunningTime\":3213.009999999269,\"onlineMoneyMade\":0,\"onlineExpGained\":4536,\"threads\":18,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,0,432],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-317602-FoodNStuff.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[39,126,132,101,3,93,95,185,102,66,193,54,27,194,77,13,101,51,53],\"reward\":{\"type\":2,\"name\":\"FoodNStuff\"}}}],\"dir\":0,\"requiredHackingSkill\":75,\"moneyAvailable\":38819393.97955288,\"moneyMax\":187500000,\"hackDifficulty\":8.357999999999986,\"baseDifficulty\":25,\"minDifficulty\":8,\"serverGrowth\":40,\"serversOnNetwork\":[\"86.9.6.7\",\"56.9.5.0\"],\"numOpenPortsRequired\":1,\"sshPortOpen\":true,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":1}},\"8.8.8.8\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"8.8.8.8\",\"hostname\":\"nectar-net\",\"organizationName\":\"Nectar Nightclub Network\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":16,\"ramUsed\":15.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-lib.script\",\"code\":\"function getRoots() {\\n    return ['foodnstuff', 'harakiri-sushi', 'hong-fang-tea', 'iron-gym', 'joesguns', 'max-hardware', 'nectar-net', 'neo-net', 'sigma-cosmetics', 'zer0'];\\n}\\n\\nfunction err(msg) {\\n    tprint('Fatal error: ' + msg);\\n    exit();\\n}\\n\\nfunction secLoop(target, count, f) {\\n    var i = 0;\\n    var baseSec = getServerBaseSecurityLevel(target);\\n    \\n    while (i < count) {\\n        if (getServerSecurityLevel(target) > baseSec) {\\n            weaken(target);\\n        } else {\\n            f();\\n            i++;\\n        }\\n    }    \\n}\\n\\nfunction dispatch(target) {\\n    exec('bs-dispatch.script', 'home', 1, target);\\n}\",\"ramUsage\":3.25,\"server\":\"8.8.8.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-grow.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { grow(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.4,\"server\":\"8.8.8.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-hack.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { hack(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.35,\"server\":\"8.8.8.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"8.8.8.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"8.8.8.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"8.8.8.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"8.8.8.8\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"8.8.8.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"8.8.8.8\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"8.8.8.8\",\"module\":{}}},\"server\":\"8.8.8.8\",\"logs\":[\"Executing grow() on server zer0 in 131.524 seconds (t=9)\"],\"logUpd\":true,\"offlineRunningTime\":0.01,\"offlineMoneyMade\":0,\"offlineExpGained\":0,\"onlineRunningTime\":78.41000000000058,\"onlineMoneyMade\":0,\"onlineExpGained\":0,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0]}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":20,\"moneyAvailable\":4001405.0025503687,\"moneyMax\":68750000,\"hackDifficulty\":19.97799999999978,\"baseDifficulty\":20,\"minDifficulty\":7,\"serverGrowth\":25,\"serversOnNetwork\":[\"23.0.9.7\",\"7.2.8.7\",\"20.0.5.8\"],\"numOpenPortsRequired\":0,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"7.2.8.7\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"7.2.8.7\",\"hostname\":\"neo-net\",\"organizationName\":\"Neo Nightclub Network\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":32,\"ramUsed\":31.5,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-lib.script\",\"code\":\"function getRoots() {\\n    return ['foodnstuff', 'harakiri-sushi', 'hong-fang-tea', 'iron-gym', 'joesguns', 'max-hardware', 'nectar-net', 'neo-net', 'sigma-cosmetics', 'zer0'];\\n}\\n\\nfunction err(msg) {\\n    tprint('Fatal error: ' + msg);\\n    exit();\\n}\\n\\nfunction secLoop(target, count, f) {\\n    var i = 0;\\n    var baseSec = getServerBaseSecurityLevel(target);\\n    \\n    while (i < count) {\\n        if (getServerSecurityLevel(target) > baseSec) {\\n            weaken(target);\\n        } else {\\n            f();\\n            i++;\\n        }\\n    }    \\n}\\n\\nfunction dispatch(target) {\\n    exec('bs-dispatch.script', 'home', 1, target);\\n}\",\"ramUsage\":3.25,\"server\":\"7.2.8.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-grow.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { grow(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.4,\"server\":\"7.2.8.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"7.2.8.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"7.2.8.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"7.2.8.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"7.2.8.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"7.2.8.7\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"7.2.8.7\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"7.2.8.7\",\"module\":\"\"}},\"server\":\"7.2.8.7\",\"logs\":[],\"logUpd\":false,\"offlineRunningTime\":0.01,\"offlineMoneyMade\":0,\"offlineExpGained\":0,\"onlineRunningTime\":0.41000000000000003,\"onlineMoneyMade\":0,\"onlineExpGained\":0,\"threads\":18,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0]}}}}],\"programs\":[],\"messages\":[\"the-hidden-world.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-193141.cct\",\"type\":\"Array Jumping Game\",\"data\":[9,8,0,6,6,5,0,10,0,7,5,0,3,4,0],\"reward\":{\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-247041.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[2,9],[24,28],[6,10],[17,20],[25,31],[1,2],[22,30],[2,8],[24,32],[16,20],[6,14],[22,24],[18,20],[9,12],[6,15],[25,34]],\"reward\":{\"type\":1}}}],\"dir\":0,\"requiredHackingSkill\":50,\"moneyAvailable\":6547357.773377206,\"moneyMax\":125000000,\"hackDifficulty\":22.836000000000016,\"baseDifficulty\":25,\"minDifficulty\":8,\"serverGrowth\":25,\"serversOnNetwork\":[\"8.8.8.8\",\"78.7.5.3\",\"19.6.9.8\",\"11.7.4.3\"],\"numOpenPortsRequired\":1,\"sshPortOpen\":true,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":1}},\"56.9.5.0\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"56.9.5.0\",\"hostname\":\"silver-helix\",\"organizationName\":\"Silver Helix\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":64,\"ramUsed\":63,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"56.9.5.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"56.9.5.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"56.9.5.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"56.9.5.0\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"56.9.5.0\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"56.9.5.0\",\"module\":\"\"}},\"server\":\"56.9.5.0\",\"logs\":[\"Called grow() on zer0 1 times while offline\",\"zer0 grown by 13.955123% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=36)\",\"Available money on zer0 grown by 3.689782%. Gained 378.0000 hacking exp (t=36)\",\"Executing grow() on server zer0 in 122.316 seconds (t=36)\"],\"logUpd\":true,\"offlineRunningTime\":5.803999999999999,\"offlineMoneyMade\":0,\"offlineExpGained\":0.9886012499999999,\"onlineRunningTime\":1568.8100000002198,\"onlineMoneyMade\":0,\"onlineExpGained\":5292,\"threads\":36,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,504,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"new-triads.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-243184-AlphaEnterprises.cct\",\"type\":\"Total Ways to Sum\",\"data\":11,\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}}],\"dir\":0,\"requiredHackingSkill\":150,\"moneyAvailable\":45000000,\"moneyMax\":1125000000,\"hackDifficulty\":30,\"baseDifficulty\":30,\"minDifficulty\":10,\"serverGrowth\":30,\"serversOnNetwork\":[\"36.3.5.5\",\"11.7.0.4\"],\"numOpenPortsRequired\":2,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":2}},\"51.5.1.5\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"51.5.1.5\",\"hostname\":\"hong-fang-tea\",\"organizationName\":\"HongFang Teahouse\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":16,\"ramUsed\":15.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-grow.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { grow(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.4,\"server\":\"51.5.1.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-lib.script\",\"code\":\"function getRoots() {\\n    return ['foodnstuff', 'harakiri-sushi', 'hong-fang-tea', 'iron-gym', 'joesguns', 'max-hardware', 'nectar-net', 'neo-net', 'sigma-cosmetics', 'zer0'];\\n}\\n\\nfunction err(msg) {\\n    tprint('Fatal error: ' + msg);\\n    exit();\\n}\\n\\nfunction secLoop(target, count, f) {\\n    var i = 0;\\n    var baseSec = getServerBaseSecurityLevel(target);\\n    \\n    while (i < count) {\\n        if (getServerSecurityLevel(target) > baseSec) {\\n            weaken(target);\\n        } else {\\n            f();\\n            i++;\\n        }\\n    }    \\n}\\n\\nfunction dispatch(target) {\\n    exec('bs-dispatch.script', 'home', 1, target);\\n}\",\"ramUsage\":3.25,\"server\":\"51.5.1.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-hack.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { hack(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.35,\"server\":\"51.5.1.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"51.5.1.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"51.5.1.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"51.5.1.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"51.5.1.5\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"51.5.1.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"51.5.1.5\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"51.5.1.5\",\"module\":{}}},\"server\":\"51.5.1.5\",\"logs\":[\"Executing grow() on server zer0 in 95.573 seconds (t=9)\",\"Available money on zer0 grown by 1.265768%. Gained 94.5000 hacking exp (t=9)\",\"Executing grow() on server zer0 in 91.285 seconds (t=9)\"],\"logUpd\":true,\"offlineRunningTime\":0.01,\"offlineMoneyMade\":0,\"offlineExpGained\":0,\"onlineRunningTime\":120.41000000000118,\"onlineMoneyMade\":0,\"onlineExpGained\":94.5,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,9,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0]}}}}],\"programs\":[],\"messages\":[\"brighter-than-the-sun.lit\"],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":30,\"moneyAvailable\":4081254.066877914,\"moneyMax\":75000000,\"hackDifficulty\":14.971999999999989,\"baseDifficulty\":15,\"minDifficulty\":5,\"serverGrowth\":20,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":0,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"28.9.5.9\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"28.9.5.9\",\"hostname\":\"harakiri-sushi\",\"organizationName\":\"HaraKiri Sushi Bar Network\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":16,\"ramUsed\":15.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-lib.script\",\"code\":\"function getRoots() {\\n    return ['foodnstuff', 'harakiri-sushi', 'hong-fang-tea', 'iron-gym', 'joesguns', 'max-hardware', 'nectar-net', 'neo-net', 'sigma-cosmetics', 'zer0'];\\n}\\n\\nfunction err(msg) {\\n    tprint('Fatal error: ' + msg);\\n    exit();\\n}\\n\\nfunction secLoop(target, count, f) {\\n    var i = 0;\\n    var baseSec = getServerBaseSecurityLevel(target);\\n    \\n    while (i < count) {\\n        if (getServerSecurityLevel(target) > baseSec) {\\n            weaken(target);\\n        } else {\\n            f();\\n            i++;\\n        }\\n    }    \\n}\\n\\nfunction dispatch(target) {\\n    exec('bs-dispatch.script', 'home', 1, target);\\n}\",\"ramUsage\":3.25,\"server\":\"28.9.5.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-grow.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { grow(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.4,\"server\":\"28.9.5.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-hack.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { hack(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.35,\"server\":\"28.9.5.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"28.9.5.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"28.9.5.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"28.9.5.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"28.9.5.9\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"28.9.5.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"28.9.5.9\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"28.9.5.9\",\"module\":{}}},\"server\":\"28.9.5.9\",\"logs\":[\"Executing grow() on server zer0 in 90.022 seconds (t=9)\"],\"logUpd\":true,\"offlineRunningTime\":0.01,\"offlineMoneyMade\":0,\"offlineExpGained\":0,\"onlineRunningTime\":42.41000000000007,\"onlineMoneyMade\":0,\"onlineExpGained\":0,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0]}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":40,\"moneyAvailable\":100000000,\"moneyMax\":100000000,\"hackDifficulty\":5,\"baseDifficulty\":15,\"minDifficulty\":5,\"serverGrowth\":40,\"serversOnNetwork\":[\"44.1.3.8\",\"28.3.8.0\"],\"numOpenPortsRequired\":0,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"20.0.5.8\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"20.0.5.8\",\"hostname\":\"phantasy\",\"organizationName\":\"Phantasy Club\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":32,\"ramUsed\":31.5,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"20.0.5.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"20.0.5.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"20.0.5.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"20.0.5.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"20.0.5.8\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"20.0.5.8\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"20.0.5.8\",\"module\":\"\"}},\"server\":\"20.0.5.8\",\"logs\":[\"Called weaken() on zer0 0 times while offline\",\"Executing weaken() on server zer0 in 117.285 seconds (t=18)\",\"Server security level on zer0 weakened to 8. Gained 189.0000 hacking exp (t=18)\",\"Executing weaken() on server zer0 in 110.803 seconds (t=18)\"],\"logUpd\":true,\"offlineRunningTime\":5.803999999999999,\"offlineMoneyMade\":0,\"offlineExpGained\":0.9125549999999999,\"onlineRunningTime\":3759.209999998772,\"onlineMoneyMade\":0,\"onlineExpGained\":4725,\"threads\":18,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,0,450],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-608018.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"213417377\",\"reward\":{\"type\":1}}}],\"dir\":0,\"requiredHackingSkill\":100,\"moneyAvailable\":24000000,\"moneyMax\":600000000,\"hackDifficulty\":20,\"baseDifficulty\":20,\"minDifficulty\":7,\"serverGrowth\":35,\"serversOnNetwork\":[\"8.8.8.8\",\"49.2.3.6\",\"56.5.8.2\"],\"numOpenPortsRequired\":2,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":2}},\"96.5.7.3\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"96.5.7.3\",\"hostname\":\"max-hardware\",\"organizationName\":\"Max Hardware Store\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":32,\"ramUsed\":31.5,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-lib.script\",\"code\":\"function getRoots() {\\n    return ['foodnstuff', 'harakiri-sushi', 'hong-fang-tea', 'iron-gym', 'joesguns', 'max-hardware', 'nectar-net', 'neo-net', 'sigma-cosmetics', 'zer0'];\\n}\\n\\nfunction err(msg) {\\n    tprint('Fatal error: ' + msg);\\n    exit();\\n}\\n\\nfunction secLoop(target, count, f) {\\n    var i = 0;\\n    var baseSec = getServerBaseSecurityLevel(target);\\n    \\n    while (i < count) {\\n        if (getServerSecurityLevel(target) > baseSec) {\\n            weaken(target);\\n        } else {\\n            f();\\n            i++;\\n        }\\n    }    \\n}\\n\\nfunction dispatch(target) {\\n    exec('bs-dispatch.script', 'home', 1, target);\\n}\",\"ramUsage\":3.25,\"server\":\"96.5.7.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-grow.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { grow(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.4,\"server\":\"96.5.7.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-hack.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { hack(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.35,\"server\":\"96.5.7.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"96.5.7.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"96.5.7.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"96.5.7.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"96.5.7.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"96.5.7.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"96.5.7.3\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"96.5.7.3\",\"module\":\"\"}},\"server\":\"96.5.7.3\",\"logs\":[\"Called weaken() on zer0 0 times while offline\",\"Executing weaken() on server zer0 in 117.285 seconds (t=18)\",\"Server security level on zer0 weakened to 8. Gained 189.0000 hacking exp (t=18)\",\"Executing weaken() on server zer0 in 110.803 seconds (t=18)\"],\"logUpd\":true,\"offlineRunningTime\":5.805,\"offlineMoneyMade\":0,\"offlineExpGained\":0.8366531250000001,\"onlineRunningTime\":2997.0099999994654,\"onlineMoneyMade\":0,\"onlineExpGained\":4347,\"threads\":18,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,0,414],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":80,\"moneyAvailable\":66298004.63986975,\"moneyMax\":250000000,\"hackDifficulty\":26.955999999999996,\"baseDifficulty\":15,\"minDifficulty\":5,\"serverGrowth\":30,\"serversOnNetwork\":[\"85.5.1.8\"],\"numOpenPortsRequired\":1,\"sshPortOpen\":true,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":1}},\"23.3.4.3\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"23.3.4.3\",\"hostname\":\"omega-net\",\"organizationName\":\"Omega Software\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":32,\"ramUsed\":31.5,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"23.3.4.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"23.3.4.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"23.3.4.3\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"23.3.4.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"23.3.4.3\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"23.3.4.3\",\"module\":\"\"}},\"server\":\"23.3.4.3\",\"logs\":[\"Executing grow() on server zer0 in 93.828 seconds (t=18)\",\"Available money on zer0 grown by 1.806166%. Gained 189.0000 hacking exp (t=18)\",\"Executing grow() on server zer0 in 122.947 seconds (t=18)\"],\"logUpd\":true,\"offlineRunningTime\":5.805,\"offlineMoneyMade\":0,\"offlineExpGained\":0,\"onlineRunningTime\":206.4099999999968,\"onlineMoneyMade\":0,\"onlineExpGained\":189,\"threads\":18,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,18,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"the-new-god.lit\"],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":215,\"moneyAvailable\":69216025,\"moneyMax\":1730400625,\"hackDifficulty\":27,\"baseDifficulty\":27,\"minDifficulty\":9,\"serverGrowth\":37,\"serversOnNetwork\":[\"28.3.8.0\"],\"numOpenPortsRequired\":2,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":2}},\"19.6.9.8\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"19.6.9.8\",\"hostname\":\"crush-fitness\",\"organizationName\":\"Crush Fitness\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-236743.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[62,56,67,147,23,92,197,105,88,61,3,135,162,26,152,19,23,146,168,10,141,146,78,195,134,122,4,21,135,70,53,198,27,173,102,86,71,84,109,61,169,27,95,148,22,36,57],\"reward\":{\"type\":3}}}],\"dir\":0,\"requiredHackingSkill\":267,\"moneyAvailable\":41741250,\"moneyMax\":1043531250,\"hackDifficulty\":36,\"baseDifficulty\":36,\"minDifficulty\":12,\"serverGrowth\":28,\"serversOnNetwork\":[\"7.2.8.7\"],\"numOpenPortsRequired\":2,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":2}},\"85.5.1.8\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"85.5.1.8\",\"hostname\":\"iron-gym\",\"organizationName\":\"Iron Gym Network\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":32,\"ramUsed\":31.5,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-lib.script\",\"code\":\"function getRoots() {\\n    return ['foodnstuff', 'harakiri-sushi', 'hong-fang-tea', 'iron-gym', 'joesguns', 'max-hardware', 'nectar-net', 'sigma-cosmetics', 'zer0'];\\n}\\n\\nfunction err(msg) {\\n    tprint('Fatal error: ' + msg);\\n    exit();\\n}\\n\\nfunction secLoop(target, count, f) {\\n    var i = 0;\\n    var baseSec = getServerBaseSecurityLevel(target);\\n    \\n    while (i < count) {\\n        if (getServerSecurityLevel(target) > baseSec) {\\n            weaken(target);\\n        } else {\\n            f();\\n            i++;\\n        }\\n    }    \\n}\\n\\nfunction dispatch(target) {\\n    exec('bs-dispatch.script', 'home', 1, target);\\n}\",\"ramUsage\":3.25,\"server\":\"85.5.1.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"bs-grow.script\",\"code\":\"import * as lib from 'bs-lib.script';\\nvar target = args[0];\\nvar count = args[1];\\n\\nlib.secLoop(target, count, function() { grow(target); });\\nlib.dispatch(target);\",\"ramUsage\":3.4,\"server\":\"85.5.1.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"85.5.1.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"85.5.1.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"85.5.1.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"85.5.1.8\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"85.5.1.8\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"85.5.1.8\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"85.5.1.8\",\"module\":{}}},\"server\":\"85.5.1.8\",\"logs\":[\"Executing grow() on server zer0 in 93.828 seconds (t=18)\",\"Available money on zer0 grown by 1.647971%. Gained 189.0000 hacking exp (t=18)\",\"Executing grow() on server zer0 in 132.488 seconds (t=18)\"],\"logUpd\":true,\"offlineRunningTime\":0.01,\"offlineMoneyMade\":0,\"offlineExpGained\":0,\"onlineRunningTime\":156.40999999999966,\"onlineMoneyMade\":0,\"onlineExpGained\":189,\"threads\":18,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,18,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0]}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":100,\"moneyAvailable\":21687233.692784477,\"moneyMax\":500000000,\"hackDifficulty\":29.132,\"baseDifficulty\":30,\"minDifficulty\":10,\"serverGrowth\":20,\"serversOnNetwork\":[\"44.1.3.8\",\"96.5.7.3\"],\"numOpenPortsRequired\":1,\"sshPortOpen\":true,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":1}},\"19.0.4.5\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"19.0.4.5\",\"hostname\":\"millenium-fitness\",\"organizationName\":\"Millenium Fitness Network\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":128,\"ramUsed\":127.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"19.0.4.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-enrol.script\",\"code\":\"var target = args[0];\\n\\nbrutessh(target);\\nftpcrack(target);\\nrelaysmtp(target);\\nhttpworm(target);\\nsqlinject(target);\\nnuke(target);\",\"ramUsage\":1.9,\"server\":\"19.0.4.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"19.0.4.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"19.0.4.5\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"19.0.4.5\",\"module\":\"\"}},\"server\":\"19.0.4.5\",\"logs\":[\"Called grow() on zer0 1 times while offline\",\"zer0 grown by 13.945392% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=73)\",\"Available money on zer0 grown by 7.480800%. Gained 766.5000 hacking exp (t=73)\",\"Executing grow() on server zer0 in 125.407 seconds (t=73)\"],\"logUpd\":true,\"offlineRunningTime\":30.604999999999997,\"offlineMoneyMade\":0,\"offlineExpGained\":49.353607211158526,\"onlineRunningTime\":51336.20999981385,\"onlineMoneyMade\":0,\"onlineExpGained\":246046.5,\"threads\":73,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,23433,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-52433.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[69,5,143,72,50,96,118,42,78,19,175,26,35,199,110,181,28,145,11,74,7,181,49,190,2,174,164,187,123,80,114,19,39,174,124,2,64,112,88,190],\"reward\":{\"type\":3}}}],\"dir\":0,\"requiredHackingSkill\":498,\"moneyAvailable\":250000000,\"moneyMax\":6250000000,\"hackDifficulty\":52,\"baseDifficulty\":52,\"minDifficulty\":17,\"serverGrowth\":26,\"serversOnNetwork\":[\"69.2.3.5\"],\"numOpenPortsRequired\":3,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"10.0.7.7\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"10.0.7.7\",\"hostname\":\"powerhouse-fitness\",\"organizationName\":\"Powerhouse Fitness\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":16,\"ramUsed\":15.3,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"10.0.7.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"10.0.7.7\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"10.0.7.7\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"10.0.7.7\",\"module\":\"\"}},\"server\":\"10.0.7.7\",\"logs\":[\"dh-worker-hack.js generated $1688.1794796875001 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $881,775.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 29.555 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $656,946.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 30.074 seconds (t=9)\",\"Script FAILED to hack zer0. Gained 23.6250 exp (t=9)\",\"Attempting to hack zer0 in 30.370 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $1,402,695.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 27.862 seconds (t=9)\",\"Script FAILED to hack zer0. Gained 23.6250 exp (t=9)\",\"Attempting to hack zer0 in 28.246 seconds (t=9)\"],\"logUpd\":true,\"offlineRunningTime\":5.805,\"offlineMoneyMade\":1688.1794796875001,\"offlineExpGained\":0.11408906249999999,\"onlineRunningTime\":452.60999999998285,\"onlineMoneyMade\":11331333,\"onlineExpGained\":897.75,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[11331333,72,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":985,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"hackDifficulty\":62,\"baseDifficulty\":62,\"minDifficulty\":21,\"serverGrowth\":58,\"serversOnNetwork\":[\"2.9.1.7\",\"10.1.9.5\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"43.5.7.1\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"43.5.7.1\",\"hostname\":\"snap-fitness\",\"organizationName\":\"Snap Fitness\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-471220-AlphaEnterprises.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[6,7,0,-4,7,-1,1,-1,7,1,-9,-3,-8,-5,0,5,5,-5,10,-4,-3,4,-6,-3,8],\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}}],\"dir\":0,\"requiredHackingSkill\":731,\"moneyAvailable\":450000000,\"moneyMax\":11250000000,\"hackDifficulty\":47,\"baseDifficulty\":47,\"minDifficulty\":16,\"serverGrowth\":49,\"serversOnNetwork\":[\"35.5.9.3\",\"35.5.5.8\",\"7.2.0.7\"],\"numOpenPortsRequired\":4,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"58.1.9.0\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"58.1.9.0\",\"hostname\":\"run4theh111z\",\"organizationName\":\"The Runners\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":256,\"ramUsed\":255.5,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"58.1.9.0\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"58.1.9.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"58.1.9.0\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"58.1.9.0\",\"module\":\"\"}},\"server\":\"58.1.9.0\",\"logs\":[\"Called grow() on zer0 3 times while offline\",\"zer0 grown by 41.855580% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=146)\",\"Available money on zer0 grown by 15.125256%. Gained 1,533.0000 hacking exp (t=146)\",\"Executing grow() on server zer0 in 130.294 seconds (t=146)\"],\"logUpd\":true,\"offlineRunningTime\":26.498000000000005,\"offlineMoneyMade\":0,\"offlineExpGained\":62.249916195865254,\"onlineRunningTime\":45054.4099999054,\"onlineMoneyMade\":0,\"onlineExpGained\":436905,\"threads\":146,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,41610,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-676751-AlphaEnterprises.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[5,14],[2,7],[24,27],[9,13],[20,22],[7,14],[15,25],[10,20],[15,23],[20,27],[24,30],[5,11],[5,7],[13,16],[25,34],[14,24]],\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}}],\"dir\":0,\"requiredHackingSkill\":532,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":0,\"baseDifficulty\":0,\"minDifficulty\":1,\"serverGrowth\":0,\"serversOnNetwork\":[\"71.2.9.1\",\"5.3.6.1\",\"15.0.1.4\"],\"numOpenPortsRequired\":4,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"47.8.1.0\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"47.8.1.0\",\"hostname\":\"I.I.I.I\",\"organizationName\":\"I.I.I.I\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":64,\"ramUsed\":63,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"47.8.1.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"47.8.1.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"47.8.1.0\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"47.8.1.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"47.8.1.0\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"47.8.1.0\",\"module\":\"\"}},\"server\":\"47.8.1.0\",\"logs\":[\"Called grow() on zer0 1 times while offline\",\"zer0 grown by 13.913055% from grow() calls made while offline\",\"Executing grow() on server zer0 in 93.828 seconds (t=36)\",\"Available money on zer0 grown by 3.371859%. Gained 378.0000 hacking exp (t=36)\",\"Executing grow() on server zer0 in 131.524 seconds (t=36)\"],\"logUpd\":true,\"offlineRunningTime\":5.806,\"offlineMoneyMade\":0,\"offlineExpGained\":0.152145,\"onlineRunningTime\":368.6099999999876,\"onlineMoneyMade\":0,\"onlineExpGained\":1134,\"threads\":36,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,108,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"democracy-is-dead.lit\"],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":349,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":0,\"baseDifficulty\":0,\"minDifficulty\":1,\"serverGrowth\":0,\"serversOnNetwork\":[\"11.7.4.3\"],\"numOpenPortsRequired\":3,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":3}},\"11.7.4.3\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"11.7.4.3\",\"hostname\":\"avmnite-02h\",\"organizationName\":\"NiteSec\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":true,\"maxRam\":16,\"ramUsed\":15.75,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"11.7.4.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"11.7.4.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"11.7.4.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"11.7.4.3\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"11.7.4.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"11.7.4.3\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"11.7.4.3\",\"module\":{}}},\"server\":\"11.7.4.3\",\"logs\":[\"Executing grow() on server zer0 in 90.022 seconds (t=9)\"],\"logUpd\":true,\"offlineRunningTime\":0.01,\"offlineMoneyMade\":0,\"offlineExpGained\":0,\"onlineRunningTime\":36.40999999999998,\"onlineMoneyMade\":0,\"onlineExpGained\":0,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[0,0,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0]}}}}],\"programs\":[],\"messages\":[\"democracy-is-dead.lit\"],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":216,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":0,\"minDifficulty\":1,\"serverGrowth\":0,\"serversOnNetwork\":[\"7.2.8.7\",\"47.8.1.0\"],\"numOpenPortsRequired\":2,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":2}},\"89.6.0.4\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"89.6.0.4\",\"hostname\":\".\",\"organizationName\":\".\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":16,\"ramUsed\":15.3,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"89.6.0.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"89.6.0.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"89.6.0.4\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"89.6.0.4\",\"module\":\"\"}},\"server\":\"89.6.0.4\",\"logs\":[\"dh-worker-hack.js generated $1941.415003125 while offline by hacking zer0\",\"Hacked zer0 1 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $836,037.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 29.649 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $622,944.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 30.168 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $526,977.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 30.464 seconds (t=9)\",\"Script SUCCESSFULLY hacked zer0 for $1,329,426.00 and 94.5000 exp (t=9)\",\"Attempting to hack zer0 in 27.955 seconds (t=9)\",\"Script FAILED to hack zer0. Gained 23.6250 exp (t=9)\",\"Attempting to hack zer0 in 28.246 seconds (t=9)\"],\"logUpd\":true,\"offlineRunningTime\":5.808,\"offlineMoneyMade\":1941.415003125,\"offlineExpGained\":0.13317281250000002,\"onlineRunningTime\":410.60999999998523,\"onlineMoneyMade\":12958839,\"onlineExpGained\":1063.125,\"threads\":9,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[12958839,99,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-253319-AlphaEnterprises.cct\",\"type\":\"Total Ways to Sum\",\"data\":92,\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}}],\"dir\":0,\"requiredHackingSkill\":534,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":0,\"baseDifficulty\":0,\"minDifficulty\":1,\"serverGrowth\":0,\"serversOnNetwork\":[\"55.4.4.3\",\"21.6.9.4\"],\"numOpenPortsRequired\":4,\"sshPortOpen\":true,\"ftpPortOpen\":true,\"smtpPortOpen\":true,\"httpPortOpen\":true,\"sqlPortOpen\":true,\"openPortCount\":5}},\"28.3.8.0\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"28.3.8.0\",\"hostname\":\"CSEC\",\"organizationName\":\"CyberSec\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":false,\"manuallyHacked\":true,\"maxRam\":8,\"ramUsed\":6.8,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"28.3.8.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"28.3.8.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"28.3.8.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"28.3.8.0\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"28.3.8.0\",\"module\":{}}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"28.3.8.0\",\"module\":\"\"}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"28.3.8.0\",\"module\":\"\"}},\"server\":\"28.3.8.0\",\"logs\":[\"dh-worker-hack.js generated $3250.858072222222 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=4)\",\"Script SUCCESSFULLY hacked zer0 for $361,808.00 and 42.0000 exp (t=4)\",\"Attempting to hack zer0 in 29.669 seconds (t=4)\",\"Script FAILED to hack zer0. Gained 10.5000 exp (t=4)\",\"Attempting to hack zer0 in 30.168 seconds (t=4)\",\"Script FAILED to hack zer0. Gained 10.5000 exp (t=4)\",\"Attempting to hack zer0 in 30.464 seconds (t=4)\",\"Script SUCCESSFULLY hacked zer0 for $575,224.00 and 42.0000 exp (t=4)\",\"Attempting to hack zer0 in 27.976 seconds (t=4)\",\"Script FAILED to hack zer0. Gained 10.5000 exp (t=4)\",\"Attempting to hack zer0 in 28.246 seconds (t=4)\"],\"logUpd\":true,\"offlineRunningTime\":5.808,\"offlineMoneyMade\":3250.858072222222,\"offlineExpGained\":0.11414812499999999,\"onlineRunningTime\":638.6100000000083,\"onlineMoneyMade\":17084792,\"onlineExpGained\":682.5,\"threads\":4,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[17084792,60,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[\"democracy-is-dead.lit\"],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":56,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":0,\"minDifficulty\":1,\"serverGrowth\":0,\"serversOnNetwork\":[\"28.9.5.9\",\"23.3.4.3\"],\"numOpenPortsRequired\":1,\"sshPortOpen\":true,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":1}},\"10.1.9.5\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"10.1.9.5\",\"hostname\":\"The-Cave\",\"organizationName\":\"Helios\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[\"alpha-omega.lit\"],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":925,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":0,\"baseDifficulty\":0,\"minDifficulty\":1,\"serverGrowth\":0,\"serversOnNetwork\":[\"10.0.7.7\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"0.5.0.3\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"0.5.0.3\",\"hostname\":\"w0r1d_d43m0n\",\"organizationName\":\"w0r1d_d43m0n\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":0,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":3000,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":0,\"baseDifficulty\":0,\"minDifficulty\":1,\"serverGrowth\":0,\"serversOnNetwork\":[],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"60.2.8.2\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"60.2.8.2\",\"hostname\":\"darkweb\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":false,\"purchasedByPlayer\":false,\"manuallyHacked\":false,\"maxRam\":1,\"ramUsed\":0,\"cpuCores\":1,\"scripts\":[],\"runningScripts\":[],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-15135.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[2,8],[3,5],[8,14]],\"reward\":{\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-114939-AlphaEnterprises.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-7,-6,1,-1,1,9,1,-2,7,5,7,-5,-1,5,2],\"reward\":{\"type\":2,\"name\":\"Alpha Enterprises\"}}}],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"3.1.6.8\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"3.1.6.8\",\"hostname\":\"bot1\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"3.1.6.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"3.1.6.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"3.1.6.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"3.1.6.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"3.1.6.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"3.1.6.8\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"3.1.6.8\",\"module\":\"\"}},\"server\":\"3.1.6.8\",\"logs\":[\"dh-worker-hack.js generated $7388.0193616666675 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $178,792.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.680 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $134,802.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.178 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.464 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $284,230.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 27.986 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $243,708.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.257 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.808,\"offlineMoneyMade\":7388.0193616666675,\"offlineExpGained\":0.29382572916666666,\"onlineRunningTime\":2679.0099999997547,\"onlineMoneyMade\":37539524,\"onlineExpGained\":1548.75,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[37539524,138,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"44.4.7.3\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"44.4.7.3\",\"hostname\":\"bot2\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"44.4.7.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"44.4.7.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"44.4.7.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"44.4.7.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"44.4.7.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"44.4.7.3\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"44.4.7.3\",\"module\":\"\"}},\"server\":\"44.4.7.3\",\"logs\":[\"dh-worker-hack.js generated $7621.205272500001 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $177,748.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.690 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $134,016.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.189 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $114,038.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.474 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $282,558.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 27.997 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $242,278.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.267 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.809,\"offlineMoneyMade\":7621.205272500001,\"offlineExpGained\":0.26322023437500003,\"onlineRunningTime\":2391.0100000000166,\"onlineMoneyMade\":38800390,\"onlineExpGained\":1412.25,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[38800390,128,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"73.2.2.9\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"73.2.2.9\",\"hostname\":\"bot3\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"73.2.2.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"73.2.2.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"73.2.2.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"73.2.2.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"73.2.2.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"73.2.2.9\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"73.2.2.9\",\"module\":\"\"}},\"server\":\"73.2.2.9\",\"logs\":[\"dh-worker-hack.js generated $6678.077658750001 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $176,710.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.700 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $133,236.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.199 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $113,376.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.485 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $280,898.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.007 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $240,854.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.277 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.809,\"offlineMoneyMade\":6678.077658750001,\"offlineExpGained\":0.24736359375000005,\"onlineRunningTime\":2349.010000000055,\"onlineMoneyMade\":34110902,\"onlineExpGained\":1333.5,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[34110902,118,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"48.6.7.4\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"48.6.7.4\",\"hostname\":\"bot4\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"48.6.7.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"48.6.7.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"48.6.7.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"48.6.7.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"48.6.7.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"48.6.7.4\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"48.6.7.4\",\"module\":\"\"}},\"server\":\"48.6.7.4\",\"logs\":[\"dh-worker-hack.js generated $7302.230472083334 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $175,678.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.711 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $132,460.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.209 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $112,716.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.495 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 28.007 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $239,440.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.288 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.809,\"offlineMoneyMade\":7302.230472083334,\"offlineExpGained\":0.25899179687500007,\"onlineRunningTime\":2313.0100000000875,\"onlineMoneyMade\":36925898,\"onlineExpGained\":1375.5,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[36925898,124,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"18.4.4.1\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"18.4.4.1\",\"hostname\":\"bot5\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"18.4.4.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"18.4.4.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"18.4.4.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"18.4.4.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"18.4.4.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"18.4.4.1\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"18.4.4.1\",\"module\":\"\"}},\"server\":\"18.4.4.1\",\"logs\":[\"dh-worker-hack.js generated $6932.397636250001 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $174,654.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.721 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $131,688.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.220 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.495 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $279,246.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.018 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $238,034.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.298 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.809,\"offlineMoneyMade\":6932.397636250001,\"offlineExpGained\":0.25053492187500004,\"onlineRunningTime\":2271.0100000001257,\"onlineMoneyMade\":35252498,\"onlineExpGained\":1333.5,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[35252498,120,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"69.8.5.5\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"69.8.5.5\",\"hostname\":\"bot6\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"69.8.5.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"69.8.5.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"69.8.5.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"69.8.5.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"69.8.5.5\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"69.8.5.5\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"69.8.5.5\",\"module\":\"\"}},\"server\":\"69.8.5.5\",\"logs\":[\"dh-worker-hack.js generated $6551.843930555556 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $173,634.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.732 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.220 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $112,060.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.506 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $277,604.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.028 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 28.298 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.81,\"offlineMoneyMade\":6551.843930555556,\"offlineExpGained\":0.2463489583333333,\"onlineRunningTime\":2229.010000000164,\"onlineMoneyMade\":33096592,\"onlineExpGained\":1296.75,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[33096592,116,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"7.5.5.4\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"7.5.5.4\",\"hostname\":\"bot7\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"7.5.5.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"7.5.5.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"7.5.5.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"7.5.5.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"7.5.5.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"7.5.5.4\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"7.5.5.4\",\"module\":\"\"}},\"server\":\"7.5.5.4\",\"logs\":[\"dh-worker-hack.js generated $6516.479236111111 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $172,620.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.742 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $130,920.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.230 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $111,408.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.516 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 28.028 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $236,636.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.309 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.81,\"offlineMoneyMade\":6516.479236111111,\"offlineExpGained\":0.24740624999999997,\"onlineRunningTime\":2192.810000000197,\"onlineMoneyMade\":33009274,\"onlineExpGained\":1317.75,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[33009274,120,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"5.2.5.4\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"5.2.5.4\",\"hostname\":\"bot8\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"5.2.5.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"5.2.5.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"5.2.5.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"5.2.5.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"5.2.5.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"5.2.5.4\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"5.2.5.4\",\"module\":\"\"}},\"server\":\"5.2.5.4\",\"logs\":[\"dh-worker-hack.js generated $7359.2285 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $171,614.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.752 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.230 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $110,760.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.526 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 28.028 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $235,248.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.319 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.81,\"offlineMoneyMade\":7359.2285,\"offlineExpGained\":0.27066666666666667,\"onlineRunningTime\":2397.010000000011,\"onlineMoneyMade\":37059998,\"onlineExpGained\":1417.5,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[37059998,128,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"79.4.5.9\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"79.4.5.9\",\"hostname\":\"bot9\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"79.4.5.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"79.4.5.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"79.4.5.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"79.4.5.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"79.4.5.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"79.4.5.9\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"79.4.5.9\",\"module\":\"\"}},\"server\":\"79.4.5.9\",\"logs\":[\"dh-worker-hack.js generated $6639.54275 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $170,612.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.763 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.230 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $110,116.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.537 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $275,972.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.038 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $233,866.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.329 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.81,\"offlineMoneyMade\":6639.54275,\"offlineExpGained\":0.25375,\"onlineRunningTime\":2354.8100000000495,\"onlineMoneyMade\":33759330,\"onlineExpGained\":1349.25,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[33759330,120,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"32.7.8.8\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"32.7.8.8\",\"hostname\":\"bot10\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"32.7.8.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"32.7.8.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"32.7.8.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"32.7.8.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"32.7.8.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"32.7.8.8\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"32.7.8.8\",\"module\":\"\"}},\"server\":\"32.7.8.8\",\"logs\":[\"dh-worker-hack.js generated $5803.912182569446 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $169,616.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.773 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $130,158.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.241 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.537 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $274,350.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.049 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $232,494.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.340 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.811,\"offlineMoneyMade\":5803.912182569446,\"offlineExpGained\":0.22206953125,\"onlineRunningTime\":2277.0100000001203,\"onlineMoneyMade\":29621076,\"onlineExpGained\":1191.75,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[29621076,102,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"21.7.2.8\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"21.7.2.8\",\"hostname\":\"bot11\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"21.7.2.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"21.7.2.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"21.7.2.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"21.7.2.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"21.7.2.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"21.7.2.8\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"21.7.2.8\",\"module\":\"\"}},\"server\":\"21.7.2.8\",\"logs\":[\"dh-worker-hack.js generated $6924.591661527777 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $168,626.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.784 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $129,400.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.251 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.537 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $272,738.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.059 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 28.340 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.811,\"offlineMoneyMade\":6924.591661527777,\"offlineExpGained\":0.23370174479166667,\"onlineRunningTime\":2234.8100000001587,\"onlineMoneyMade\":34949016,\"onlineExpGained\":1233.75,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[34949016,108,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"53.0.3.8\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"53.0.3.8\",\"hostname\":\"bot12\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"53.0.3.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"53.0.3.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"53.0.3.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"53.0.3.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"53.0.3.8\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"53.0.3.8\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"53.0.3.8\",\"module\":\"\"}},\"server\":\"53.0.3.8\",\"logs\":[\"dh-worker-hack.js generated $6210.066377638889 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $167,642.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.794 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $128,646.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.261 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $109,474.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.547 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $271,136.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.070 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $231,128.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.350 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.811,\"offlineMoneyMade\":6210.066377638889,\"offlineExpGained\":0.22947184895833334,\"onlineRunningTime\":2157.0100000002294,\"onlineMoneyMade\":31738902,\"onlineExpGained\":1244.25,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[31738902,112,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"94.4.9.4\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"94.4.9.4\",\"hostname\":\"bot13\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"94.4.9.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"94.4.9.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"94.4.9.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"94.4.9.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"94.4.9.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"94.4.9.4\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"94.4.9.4\",\"module\":\"\"}},\"server\":\"94.4.9.4\",\"logs\":[\"dh-worker-hack.js generated $4550.788622361112 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $166,664.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.804 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.261 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $108,838.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.557 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 28.070 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $229,772.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.360 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.811,\"offlineMoneyMade\":4550.788622361112,\"offlineExpGained\":0.2051499479166667,\"onlineRunningTime\":2078.8100000003005,\"onlineMoneyMade\":23098398,\"onlineExpGained\":1092,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[23098398,94,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"67.8.8.9\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"67.8.8.9\",\"hostname\":\"bot14\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"67.8.8.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"67.8.8.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"67.8.8.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"67.8.8.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"67.8.8.9\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"67.8.8.9\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"67.8.8.9\",\"module\":\"\"}},\"server\":\"67.8.8.9\",\"logs\":[\"dh-worker-hack.js generated $5654.109840416666 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 29.804 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.261 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.557 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $269,542.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.080 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $228,424.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.371 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.811999999999999,\"offlineMoneyMade\":5654.109840416666,\"offlineExpGained\":0.22633843749999996,\"onlineRunningTime\":2042.8100000003276,\"onlineMoneyMade\":28563868,\"onlineExpGained\":1181.25,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[28563868,106,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"44.2.7.2\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"44.2.7.2\",\"hostname\":\"bot15\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"44.2.7.2\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"44.2.7.2\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"44.2.7.2\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"44.2.7.2\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"44.2.7.2\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"44.2.7.2\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"44.2.7.2\",\"module\":\"\"}},\"server\":\"44.2.7.2\",\"logs\":[\"dh-worker-hack.js generated $4109.855967083334 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $165,692.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.815 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.261 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $108,204.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.568 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $267,958.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.090 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $227,082.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.381 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.811999999999999,\"offlineMoneyMade\":4109.855967083334,\"offlineExpGained\":0.18085921875,\"onlineRunningTime\":1928.8100000003017,\"onlineMoneyMade\":21169462,\"onlineExpGained\":987,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[21169462,84,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"34.1.1.2\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"34.1.1.2\",\"hostname\":\"bot16\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"34.1.1.2\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"34.1.1.2\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"34.1.1.2\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"34.1.1.2\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"34.1.1.2\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"34.1.1.2\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"34.1.1.2\",\"module\":\"\"}},\"server\":\"34.1.1.2\",\"logs\":[\"dh-worker-hack.js generated $5573.938261597223 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $164,724.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.825 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $127,898.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.272 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $107,576.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.578 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $266,384.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.101 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $225,750.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.392 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.813,\"offlineMoneyMade\":5573.938261597223,\"offlineExpGained\":0.22003041666666664,\"onlineRunningTime\":1934.810000000303,\"onlineMoneyMade\":28555510,\"onlineExpGained\":1197,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[28555510,110,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"22.2.9.3\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"22.2.9.3\",\"hostname\":\"bot17\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"22.2.9.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"22.2.9.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"22.2.9.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"22.2.9.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"22.2.9.3\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"22.2.9.3\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"22.2.9.3\",\"module\":\"\"}},\"server\":\"22.2.9.3\",\"logs\":[\"dh-worker-hack.js generated $4735.935091319444 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $163,764.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.836 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $127,152.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.282 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.578 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $264,818.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.111 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $224,424.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.402 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.813,\"offlineMoneyMade\":4735.935091319444,\"offlineExpGained\":0.1946422916666667,\"onlineRunningTime\":1892.8100000002935,\"onlineMoneyMade\":24284368,\"onlineExpGained\":1055.25,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[24284368,94,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"67.6.1.1\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"67.6.1.1\",\"hostname\":\"bot18\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"67.6.1.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"67.6.1.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"67.6.1.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"67.6.1.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"67.6.1.1\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"67.6.1.1\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"67.6.1.1\",\"module\":\"\"}},\"server\":\"67.6.1.1\",\"logs\":[\"dh-worker-hack.js generated $5154.605824861111 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $162,808.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.846 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.282 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $106,950.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.589 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 28.111 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 28.402 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.813,\"offlineMoneyMade\":5154.605824861111,\"offlineExpGained\":0.20522067708333333,\"onlineRunningTime\":1814.8100000002757,\"onlineMoneyMade\":25851810,\"onlineExpGained\":1076.25,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[25851810,98,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"21.8.0.4\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"21.8.0.4\",\"hostname\":\"bot19\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"21.8.0.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"21.8.0.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"21.8.0.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"21.8.0.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"21.8.0.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"21.8.0.4\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"21.8.0.4\",\"module\":\"\"}},\"server\":\"21.8.0.4\",\"logs\":[\"dh-worker-hack.js generated $1582.0781002777776 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $161,858.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.856 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $126,412.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.293 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.589 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $263,262.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.122 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $223,108.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.412 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.814,\"offlineMoneyMade\":1582.0781002777776,\"offlineExpGained\":0.050785,\"onlineRunningTime\":758.6100000000356,\"onlineMoneyMade\":8625062,\"onlineExpGained\":341.25,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[8625062,28,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}},\"24.6.1.4\":{\"ctor\":\"Server\",\"data\":{\"ip\":\"24.6.1.4\",\"hostname\":\"bot20\",\"organizationName\":\"\",\"isConnectedTo\":false,\"hasAdminRights\":true,\"purchasedByPlayer\":true,\"manuallyHacked\":false,\"maxRam\":4,\"ramUsed\":3.4,\"cpuCores\":1,\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    grow(target);\\n}\",\"ramUsage\":1.75,\"server\":\"24.6.1.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    weaken(target);\\n}\",\"ramUsage\":1.75,\"server\":\"24.6.1.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.script\",\"code\":\"var target = args[0];\\n\\nwhile (true) {\\n    hack(target);\\n}\",\"ramUsage\":1.7,\"server\":\"24.6.1.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-grow.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.grow(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"24.6.1.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-weaken.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.weaken(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.75,\"server\":\"24.6.1.4\",\"module\":\"\"}},{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"24.6.1.4\",\"module\":{}}}],\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"args\":[\"zer0\"],\"scriptRef\":{\"ctor\":\"Script\",\"data\":{\"filename\":\"dh-worker-hack.js\",\"code\":\"/// @ts-check\\r\\n/// <reference path=\\\"BitBurner.d.ts\\\" />\\r\\n\\r\\n/** @param {IGame} ns */\\r\\nexport async function main(ns) {\\r\\n    var target = ns.args[0];\\r\\n    while (true) {\\r\\n        await ns.hack(target);\\r\\n    }\\r\\n}\",\"ramUsage\":1.7,\"server\":\"24.6.1.4\",\"module\":\"\"}},\"server\":\"24.6.1.4\",\"logs\":[\"dh-worker-hack.js generated $1255.4156794444445 while offline by hacking zer0\",\"Hacked zer0 0 times while offline\",\"Attempting to hack zer0 in 29.321 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $160,914.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 29.867 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $125,676.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 30.303 seconds (t=2)\",\"Script FAILED to hack zer0. Gained 5.2500 exp (t=2)\",\"Attempting to hack zer0 in 30.589 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $261,714.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.132 seconds (t=2)\",\"Script SUCCESSFULLY hacked zer0 for $221,798.00 and 21.0000 exp (t=2)\",\"Attempting to hack zer0 in 28.423 seconds (t=2)\"],\"logUpd\":true,\"offlineRunningTime\":5.814,\"offlineMoneyMade\":1255.4156794444445,\"offlineExpGained\":0.04972697916666667,\"onlineRunningTime\":722.6100000000274,\"onlineMoneyMade\":6999594,\"onlineExpGained\":336,\"threads\":2,\"dataMap\":{\"ctor\":\"AllServersMap\",\"data\":{\"44.1.3.8\":0,\"23.9.3.8\":[0,0,0,0],\"67.4.0.3\":[0,0,0,0],\"90.2.2.9\":[0,0,0,0],\"41.3.6.7\":[0,0,0,0],\"21.6.9.4\":[0,0,0,0],\"3.2.0.1\":[0,0,0,0],\"75.1.2.5\":[0,0,0,0],\"90.0.4.0\":[0,0,0,0],\"2.9.1.7\":[0,0,0,0],\"5.3.6.1\":[0,0,0,0],\"75.2.7.6\":[0,0,0,0],\"55.4.4.3\":[0,0,0,0],\"3.6.7.1\":[0,0,0,0],\"55.7.0.6\":[0,0,0,0],\"1.3.5.4\":[0,0,0,0],\"15.0.1.4\":[0,0,0,0],\"73.0.1.3\":[0,0,0,0],\"57.2.0.7\":[0,0,0,0],\"47.2.0.5\":[0,0,0,0],\"29.8.0.1\":[0,0,0,0],\"39.5.4.9\":[0,0,0,0],\"83.5.6.1\":[0,0,0,0],\"37.2.8.9\":[0,0,0,0],\"35.5.5.8\":[0,0,0,0],\"71.2.9.1\":[0,0,0,0],\"95.5.5.2\":[0,0,0,0],\"72.5.6.0\":[0,0,0,0],\"82.6.6.2\":[0,0,0,0],\"83.9.1.5\":[0,0,0,0],\"2.4.9.0\":[0,0,0,0],\"27.0.2.0\":[0,0,0,0],\"7.2.0.7\":[0,0,0,0],\"35.5.9.3\":[0,0,0,0],\"36.2.7.8\":[0,0,0,0],\"52.2.8.1\":[0,0,0,0],\"84.3.6.9\":[0,0,0,0],\"69.2.3.5\":[0,0,0,0],\"11.1.2.9\":[0,0,0,0],\"96.3.2.7\":[0,0,0,0],\"34.8.6.6\":[0,0,0,0],\"8.0.1.0\":[0,0,0,0],\"49.2.3.6\":[0,0,0,0],\"56.5.8.2\":[0,0,0,0],\"11.7.0.4\":[0,0,0,0],\"78.7.5.3\":[0,0,0,0],\"23.0.9.7\":[0,0,0,0],\"6.1.5.8\":[0,0,0,0],\"86.9.6.7\":[0,0,0,0],\"36.3.5.5\":[6999594,28,0,0],\"8.8.8.8\":[0,0,0,0],\"7.2.8.7\":[0,0,0,0],\"56.9.5.0\":[0,0,0,0],\"51.5.1.5\":[0,0,0,0],\"28.9.5.9\":[0,0,0,0],\"20.0.5.8\":[0,0,0,0],\"96.5.7.3\":[0,0,0,0],\"23.3.4.3\":[0,0,0,0],\"19.6.9.8\":[0,0,0,0],\"85.5.1.8\":[0,0,0,0],\"19.0.4.5\":[0,0,0,0],\"10.0.7.7\":[0,0,0,0],\"43.5.7.1\":[0,0,0,0],\"58.1.9.0\":[0,0,0,0],\"47.8.1.0\":[0,0,0,0],\"11.7.4.3\":[0,0,0,0],\"89.6.0.4\":[0,0,0,0],\"28.3.8.0\":[0,0,0,0],\"10.1.9.5\":[0,0,0,0],\"0.5.0.3\":[0,0,0,0],\"60.2.8.2\":[0,0,0,0],\"3.1.6.8\":0,\"44.4.7.3\":0,\"73.2.2.9\":0,\"48.6.7.4\":0,\"18.4.4.1\":0,\"69.8.5.5\":0,\"7.5.5.4\":0,\"5.2.5.4\":0,\"79.4.5.9\":0,\"32.7.8.8\":0,\"21.7.2.8\":0,\"53.0.3.8\":0,\"94.4.9.4\":0,\"67.8.8.9\":0,\"44.2.7.2\":0,\"34.1.1.2\":0,\"22.2.9.3\":0,\"67.6.1.1\":0,\"21.8.0.4\":0,\"24.6.1.4\":0}}}}],\"programs\":[],\"messages\":[],\"textFiles\":[],\"contracts\":[],\"dir\":0,\"requiredHackingSkill\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"hackDifficulty\":1,\"baseDifficulty\":1,\"minDifficulty\":1,\"serverGrowth\":1,\"serversOnNetwork\":[\"44.1.3.8\"],\"numOpenPortsRequired\":5,\"sshPortOpen\":false,\"ftpPortOpen\":false,\"smtpPortOpen\":false,\"httpPortOpen\":false,\"sqlPortOpen\":false,\"openPortCount\":0}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":48918.78263333569,\"favor\":0,\"rolloverRep\":0}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":15.365538461538641,\"favor\":0,\"rolloverRep\":0}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":0,\"favor\":0,\"rolloverRep\":0}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"rolloverRep\":0}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0,\"rolloverRep\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0,\"rolloverRep\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0,\"rolloverRep\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0,\"rolloverRep\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0,\"rolloverRep\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0,\"rolloverRep\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0,\"rolloverRep\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0,\"rolloverRep\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0,\"rolloverRep\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"NeuroFlux Governor\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0,\"rolloverRep\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0,\"rolloverRep\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0,\"rolloverRep\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0,\"rolloverRep\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0,\"rolloverRep\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"NeuroFlux Governor\",\"The Black Hand\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Black Hand\",\"playerReputation\":0,\"rolloverRep\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"NiteSec\",\"playerReputation\":424.25166666666667,\"rolloverRep\":0}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0,\"rolloverRep\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0,\"rolloverRep\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0,\"rolloverRep\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0,\"rolloverRep\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"CashRoot Starter Kit\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":2486.2456410256173,\"rolloverRep\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0,\"rolloverRep\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"NeuroFlux Governor\",\"Graphene BranchiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0,\"rolloverRep\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0,\"rolloverRep\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0,\"rolloverRep\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0,\"rolloverRep\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0,\"rolloverRep\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0,\"rolloverRep\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":7706.528025746039,\"rolloverRep\":0}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Social Negotiation Assistant (S.N.A)\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tian Di Hui\",\"playerReputation\":0,\"rolloverRep\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"NeuroFlux Governor\",\"Neurotrainer I\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"CyberSec\",\"playerReputation\":10392.104296926906,\"rolloverRep\":0}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0,\"rolloverRep\":0}}}","SpecialServerIpsSave":"{\"ctor\":\"SpecialServerIpsMap\",\"data\":{\"Fulcrum Secret Technologies Server\":\"75.2.7.6\",\"BitRunners Server\":\"58.1.9.0\",\"The Black Hand Server\":\"47.8.1.0\",\"NiteSec Server\":\"11.7.4.3\",\"The Dark Army Server\":\"89.6.0.4\",\"CyberSec Server\":\"28.3.8.0\",\"Daedalus Server\":\"10.1.9.5\",\"w0r1d_d43m0n\":\"0.5.0.3\",\"Darkweb Server\":\"60.2.8.2\"}}","AliasesSave":"{}","GlobalAliasesSave":"{}","MessagesSave":"{\"j0.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},\"j1.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},\"j2.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},\"j3.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":false}},\"j4.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":false}},\"csec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and hack our server using the Terminal. <br><br>-CyberSec\",\"recvd\":true}},\"nitesec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and hack our hidden server using the Terminal. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":true}},\"19dfj3l1nd.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":false}},\"icarus.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"icarus.msg\",\"msg\":\"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\"recvd\":false}}}","StockMarketSave":"{}","SettingsSave":"{\"AutosaveInterval\":60,\"CodeInstructionRunTime\":\"10\",\"DisableHotkeys\":false,\"EditorKeybinding\":\"ace\",\"EditorTheme\":\"Monokai\",\"Locale\":\"en\",\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":1,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressHospitalizationPopup\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false}","FconfSettingsSave":"{\"ENABLE_BASH_HOTKEYS\":false,\"ENABLE_TIMESTAMPS\":false,\"MAIN_MENU_STYLE\":\"default\",\"THEME_BACKGROUND_COLOR\":\"#000000\",\"THEME_FONT_COLOR\":\"#66ff33\",\"THEME_HIGHLIGHT_COLOR\":\"#ffffff\",\"THEME_PROMPT_COLOR\":\"#f92672\",\"WRAP_INPUT\":false}","VersionSave":"\"0.42.0\"","AllGangsSave":"","CorporationResearchTreesSave":""}}